---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: media
spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        replicas: 1
        strategy: RollingUpdate

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/readarr
              tag: 0.4.13

            env:
              TZ: America/New_York
              COMPlus_EnableDiagnostics: 0
              READARR__INSTANCE_NAME: *app
              READARR__PORT: &port 8787
              READARR__APPLICATION_URL: https://readarr.dmfrey.com
              READARR__LOG_LEVEL: info
              READARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: READARR_API_KEY

            resources:
              requests:
                memory: 350Mi
                cpu: 15m
              limits:
                memory: 1Gi
                cpu: 800m

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          # sidecars:
          exporter:

            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.1.0

            args:
              - *app
              - --enable-additional-metrics

            env:
              - name: URL
                value: "http://localhost:8787"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9711

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort

    ingress:
      external:
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "material-symbols:book-outline-rounded"
          external-dns.alpha.kubernetes.io/target: external.dmfrey.com
        hosts:
          - host: &host readarr.dmfrey.com
            paths:
              - path: /
                service:
                  identifier: *app
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: readarr-tls-external

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}

      media:
        enabled: true
        existingClaim: nfs-media

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "192.168.30.5"
            path: /plexbackups/backups/readarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

      tmp:
        type: emptyDir
        medium: Memory
        advancedMounts:
          *app :
            app:
              - path: /tmp

    serviceMonitor:
      metrics:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 10s
