---
# yaml-language-server: $schema=https://kubernetes-schemas-5e0.pages.dev/apps.emqx.io/emqx_v2beta1.json
apiVersion: apps.emqx.io/v2beta1
kind: EMQX
metadata:
  name: emqx

spec:

  image: public.ecr.aws/emqx/emqx:5.8.1@sha256:9cfe9fb13c95306b4bc5eec1dde5c9265d8e06d60a7ef08f56c9d24bc35769d9

  config:
    data: |
      authentication {
        backend = "built_in_database"
        mechanism = "password_based"
        password_hash_algorithm {
            name = "bcrypt",
        }
        user_id_type = "username"
      }
      authorization {
        sources = [
          {
            type = built_in_database
            enable = true
          }
        ]
        no_match: "deny"
      }

  bootstrapAPIKeys:
    - secretRef:
        key:
          secretName: emqx-secret
          secretKey: X_EMQX_APIKEY_KEY
        secret:
          secretName: emqx-secret
          secretKey: X_EMQX_APIKEY_SECRET

  coreTemplate:

    metadata:
      annotations:
        reloader.stakater.com/auto: "true"

    spec:
      replicas: 3

      envFrom: &envFrom
        - secretRef:
            name: emqx-secret

      extraContainers:
        - name: init-mqtt
          image: docker.io/library/python:3.13-alpine@sha256:be540041682c83228415ca1dbdb061d78d6994523e8ff79c5d5b2a5cab56effb

          env:
            - name: X_EMQX_ADDRESS
              value: emqx-dashboard.datastore.svc.cluster.local:18083

          command: ["python", "/init-mqtt.py"]

          envFrom: *envFrom

          volumeMounts:
            - name: init-mqtt
              mountPath: /init-mqtt.py
              subPath: init-mqtt.py

      extraVolumes:
        - name: init-mqtt
          configMap:
            name: emqx-init-mqtt-configmap

  listenersServiceTemplate:
    metadata:
      annotations:
        lbipam.cilium.io/ips: ${SVC_MQTT_ADDR}
    spec:
      type: LoadBalancer
