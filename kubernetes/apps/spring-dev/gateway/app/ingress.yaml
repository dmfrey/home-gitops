apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-dev-gateway-ingress
  namespace: spring-dev
  annotations:
    auth.home.arpa/enabled: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    hajimari.io/enable: "false"
    meta.helm.sh/release-name: spring-dev-gateway
    meta.helm.sh/release-namespace: spring-dev
    nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
    nginx.ingress.kubernetes.io/auth-signin: https://spring-dev-gateway.dmfrey.com/outpost.goauthentik.io/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Host $http_host;
    nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-homelab5767-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
  labels:
    app.kubernetes.io/instance: spring-dev-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: spring-dev-gateway
    app.kubernetes.io/version: v0.0.0
    helm.toolkit.fluxcd.io/name: spring-dev-gateway
    helm.toolkit.fluxcd.io/namespace: spring-dev
spec:
  ingressClassName: external-nginx
  rules:
    - host: &host spring-dev-gateway.${EXTERNAL_DOMAIN}
      http:
        paths:
          - backend:
              service:
                name: spring-dev-gateway
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts: 
        - *host
      secretName: spring-dev-gateway-tls-external