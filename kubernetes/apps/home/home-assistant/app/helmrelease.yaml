---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app home-assistant
  namespace: home
spec:
  
  interval: 5m
  
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  
  maxHistory: 2
  
  install:
    createNamespace: true
    remediation:
      retries: 3
  
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  
  uninstall:
    keepHistory: false

  values:

    controllers:
      main:

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"iot-vlan",
                "namespace": "network",
                "ips": ["192.168.50.4/24"],
                "mac": "a6:60:f7:86:74:12",
                "gateway": ["192.168.50.1"]
              }]

        containers:
          main:
            image:
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2024.3.3

            env:
              - name: TZ
                value: ${TIMEZONE}
              - name: HASS_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: pg-home-assistant-app
                    key: username
              - name: HASS_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: pg-home-assistant-app
                    key: password
              - name: HASS_RECORDER_DB_URL
                value: "postgresql://$(HASS_POSTGRES_USER):$(HASS_POSTGRES_PASS)@pg-home-assistant-rw/home-assistant"

            envFrom:
              - secretRef:
                  name: home-assistant-secret
                prefix: "HASS_"

            probes:
              liveness:
                custom: true
                spec:
                  httpGet:
                    path: /manifest.json
                    port: &port 8123
                  initialDelaySeconds: 3
                  periodSeconds: 3
              readiness:
                enabled: false
              startup:
                enabled: false

            resources:
              requests:
                cpu: 47m
                memory: 1254Mi
              limits:
                memory: 1254Mi

          code:
            dependOn: main

            image:
              repository: ghcr.io/coder/code-server
              tag: 4.22.1

            args:
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - --port
              - "8081"
              - "/config"

            env:
              TZ: ${TIMEZONE}

        initContainers:
          clone-repo:
            image: 
              repository: alpine/git
              tag: latest

            command:
              - "/bin/sh"
              - -c
              - |
                if [ ! -d /config/.git ]; then
                  echo Initializing HASS Config repo
                  cd /tmp
                  git clone git@github.com:dmfrey/hass-config.git
                  cp -r hass-config/* /config
                  cp -r hass-config/.git /config
                  cp hass-config/.gitignore /config
                  ls -la /config
                else
                  echo Fetching HASS Config repo
                  cd /config
                  git fetch origin
                  git reset origin/main
                  ls -la
                fi

    service:
      main:
        controller: main
        type: LoadBalancer
        annotations:
          external-dns.alpha.kubernetes.io/hostname: home.${INTERNAL_DOMAIN}
          io.cilium/lb-ipam-ips: ${SVC_HASS_ADDR}
        ports:
          http:
            port: *port
      code:
        controller: main
        ports:
          http:
            port: &codePort 8081

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          nginx.org/websocket-services: home-assistant
          cert-manager.io/cluster-issuer: letsencrypt-prod
          hajimari.io/enable: "true"
          hajimari.io/icon: "simple-icons:homeassistant"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host home.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: home-assistant-tls-external
      code:
        enabled: true
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:vs-code"
          hajimari.io/appName: "Hass Config"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host-code hass-code.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: code
                  port: http
        tls:
          - hosts:
              - *host-code
            secretName: hass-code-tls-external

    persistence:
      config:
        enabled: true
        existingClaim: home-assistant-config
        globalMounts:
          - path: /config

      hass-config:
        enabled: true
        type: configMap
        name: hass-config
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml

      ssh-config:
        enabled: true
        type: secret
        name: home-assistant-deploy-key
        globalMounts:
          - path: /root/.ssh/config
            subPath: ssh-config
        defaultMode: 0600

      ssh-privatekey:
        enabled: true
        type: secret
        name: home-assistant-deploy-key
        globalMounts:
          - path: /root/.ssh/id_ed25519
            subPath: ssh-privatekey
        defaultMode: 0600

      known-hosts:
        enabled: true
        type: secret
        name: home-assistant-deploy-key
        globalMounts:
          - path: /root/.ssh/known_hosts
            subPath: known-hosts
        defaultMode: 0600

      dot-gitconfig:
        enabled: true
        type: secret
        name: home-assistant-deploy-key
        globalMounts:
          - path: /root/.gitconfig
            subPath: dot-gitconfig
        defaultMode: 0700

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /homeassistant
        globalMounts:
          - path: /config/backups
            readOnly: false

    serviceMonitor:
      main:
        enabled: true
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /api/prometheus
            interval: 30s
            scrapeTimeout: 10s
            bearerTokenSecret:
              name: home-assistant-secret
              key: PROMETHEUS_TOKEN

