---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: download
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    
    controllers:
      main:
        type: statefulset
    
        annotations:
          reloader.stakater.com/auto: "true"

        replicas: 1
        strategy: RollingUpdate

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65534

        statefuleSet:
          volumeClaimTemplates:
            - name: config
              globalMounts:
                - path: /config
                  readOnly: false
              accessMode: ReadWriteOnce
              size: 1Gi
              storageClass: ceph-block

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/prowlarr-develop
              tag: 1.11.4.4173@sha256:dc649d62dcd09882b7111bd73d9bc664a28ddf073108345063f368da041d29b0

            env:
              TZ: America/New_York
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 9696
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__APPLICATION_URL: "https://prowlarr.${EXTERNAL_DOMAIN}"
              PROWLARR__LOG_LEVEL: info
              PROWLARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: PROWLARR_API_KEY

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

          # sidecars:
          exporter:
            name: exporter
            image: 
              repository: ghcr.io/onedr0p/exportarr
              tag: v1.6.0
            args: ["prowlarr"]
            env:
              - name: URL
                value: "http://localhost"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9710
              - name: ENABLE_ADDITIONAL_METRICS
                value: true
              - name: ENABLE_UNKNOWN_QUEUE_ITEMS
                value: false
            ports:
              - name: metrics
                containerPort: *metricsPort 
            volumeMounts:
              - name: config
                mountPath: /config
                readOnly: true

    service:
      main:
        ports:
          http:
            port: *port
      metrics:
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        className: external-nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:movie-search"
        hosts:
          - host: &host prowlarr.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: prowlarr-tls-external

    persistence:
      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /plexbackups/backups/prowlarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: prowlarr-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 15m
            scrapeTimeout: 2m
