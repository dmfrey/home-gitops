---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app sabnzbd
  namespace: download
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:

    defaultPodOptions:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 80
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - jellyfin
                        - plex
                topologyKey: "kubernetes.io/hostname"

      annotations:
        configmap.reloader.stakater.com/reload: sabnzbd-config
        secret.reloader.stakater.com/reload: sabnzbd-secret

      hostname: sabnzbd

      securityContext:
        runAsUser: 1568
        runAsGroup: 1568
        fsGroup: 1568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 65534

    controllers:
      main:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        replicas: 1

        statefulset:
          volumeClaimTemplates:
            - name: config
              globalMounts:
                - path: /config
              accessMode: ReadWriteOnce
              size: 5Gi
              storageClass: ceph-block

        pod:
          enableServiceLinks: false

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.3.0
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                {{ .Release.Name }},
                {{ .Release.Name }}.download,
                {{ .Release.Name }}.download.svc,
                {{ .Release.Name }}.download.svc.cluster,
                {{ .Release.Name }}.${SECRET_DOMAIN}

            envFrom:
              - secretRef:
                  name: sabnzbd-secret

            ports:
              - name: http
                containerPort: *port

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 10m
                memory: 479Mi
              limits:
                memory: 8000Mi

          # sidecars:
          exporter:
            dependsOn: main
            
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1

            args: ["sabnzbd"]
            
            env:
              - name: URL
                value: "http://localhost"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9712
              - name: ENABLE_ADDITIONAL_METRICS
                value: true
              - name: ENABLE_UNKNOWN_QUEUE_ITEMS
                value: false
              - name: API_KEY
                valueFrom:
                  secretKeyRef:
                    name: sabnzbd-secret
                    key: SABNZBD_API_KEY
            
            ports:
              - name: metrics
                containerPort: *metricsPort 

    service:
      main:
        nameOverride: sabnzbd
        controller: main
        primary: true
        ports:
          http:
            port: *port
      metrics:
        controller: main
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          theme.home.arpa/theme: "nord"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:download-circle-outline"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host "sabnzbd.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: *port
              - path: /metrics
                pathType: Prefix
                service:
                  identifier: metrics
                  port: *metricsPort
        tls:
          - hosts:
              - *host
            secretName: sabnzbd-client-tls-external

    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

      sabnzbd-config:
        enabled: true
        type: configMap
        name: sabnzbd-config
        advancedMounts:
          main:
            main:
              - path: /config/sabnzbd.ini
                readOnly: false
                subPath: sabnzbd.ini

      downloads:
        enabled: true
        existingClaim: nfs-downloads
        globalMounts:
          - path: /data/downloads
            readOnly: false
