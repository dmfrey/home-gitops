apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  labels:
     grafana_datasource: "1"
     grafana.io/datasource: "true"
     namespace: monitor
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
data:
  datasource.yaml: |-
    apiVersion: 1
    deleteDatasources:
      - name: prometheus
        orgId: 1
      - name: Loki
        orgId: 1
      - name: Tempo
        orgId: 1
      - name: Alertmanager
        orgId: 1
      - name: blocky-pgcluster
        orgId: 1
    datasources:
      - name: prometheus
        type: prometheus
        access: proxy
        url: http://thanos-query.monitor.svc.cluster.local:9090
        isDefault: true
        uid: prometheus
        jsonData:
          httpMethod: POST
          exemplarTraceIdDestinations:
            - name: trace_id
              datasourceUid: tempo
      - name: Loki
        access: proxy
        type: loki
        url: http://loki-gateway.logs.svc.cluster.local
        uid: loki
        jsonData:
          derivedFields:
            - datasourceUid: tempo
              matcherRegex: '([0-9a-f]{32})'  # 'traceId: (\w+)'
              name: traceId
              url: "$${__value.raw}"
              urlDisplayLabel: 'View Trace'
      - name: Tempo
        access: proxy
        type: tempo
        url: http://tempo-gateway.trace.svc.cluster.local
        jsonData:
          httpMethod: GET
          tracesToLogsV2:
            datasourceUid: loki
            filterByTraceID: true
            filterBySpanID: false
          nodeGraph:
            enabled: true
          serviceMap:
            datasourceUid: prometheus
          lokiSearch:
            datasourceUid: loki
        uid: tempo
      - name: Alertmanager
        type: alertmanager
        access: proxy
        url: http://alert-manager.monitor.svc.cluster.local:9093
        jsonData:
          implementation: prometheus
        uid: alertmanager
      - name: blocky-pgcluster
        type: postgres
        url: pg-blocky-ro.network.svc.cluster.local:5432
        user: blocky
        secureJsonData:
          password: $__file{/etc/secrets/blocky/password}
        jsonData:
          database: blocky
          sslmode: 'disable' # disable/require/verify-ca/verify-full
          maxOpenConns: 100 # Grafana v5.4+
          maxIdleConns: 100 # Grafana v5.4+
          maxIdleConnsAuto: true # Grafana v9.5.1+
          connMaxLifetime: 14400 # Grafana v5.4+
          postgresVersion: 1000 # 903=9.3, 904=9.4, 905=9.5, 906=9.6, 1000=10
          timescaledb: false
