---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitor
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 8.5.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    replicas: 1

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            disableDeletion: false
            editable: true
            folder: ""
            options:
              path: /var/lib/grafana/dashboards/default
            orgId: 1
            type: file
          - name: device
            disableDeletion: false
            editable: true
            folder: "Device"
            options:
              path: /var/lib/grafana/dashboards/device
            orgId: 1
            type: file
          - name: network
            disableDeletion: false
            editable: true
            folder: "Network"
            options:
              path: /var/lib/grafana/dashboards/network
            orgId: 1
            type: file
          - name: security
            disableDeletion: false
            editable: true
            folder: "Security"
            options:
              path: /var/lib/grafana/dashboards/security
            orgId: 1
            type: file
          - name: storage
            disableDeletion: false
            editable: true
            folder: "Storage"
            options:
              path: /var/lib/grafana/dashboards/storage
            orgId: 1
            type: file
          - name: spring-boot
            disableDeletion: false
            editable: true
            folder: "Spring Boot"
            options:
              path: /var/lib/grafana/dashboards/spring-boot
            orgId: 1
            type: file
          - name: apm
            disableDeletion: false
            editable: true
            folder: "Application Performance"
            options:
              path: /var/lib/grafana/dashboards/apm
            orgId: 1
            type: file
          - name: datastore
            orgId: 1
            folder: Datastore
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/datastore-folder

    dashboards:
      datastore:
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly/main/tools/local/monitoring/grafana/provisioning/dashboards/dashboard.json
          datasource: prometheus
        emqx-authentication:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/authentication.json
          datasource: prometheus
        emqx-authorization:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/authorization.json
          datasource: prometheus
        emqx-client-events:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/client-events.json
          datasource: prometheus
        emqx-messages:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/messages.json
          datasource: prometheus
        emqx-overview:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/overview.json
          datasource: prometheus
        emqx-rule-engine-count:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/rule-engine-count.json
          datasource: prometheus
        emqx-rule-engine-rate:
          url: https://raw.githubusercontent.com/emqx/emqx-exporter/main/grafana-dashboard/template/emqx-5/rule-engine-rate.json
          datasource: prometheus
      device:
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter:
          gnetId: 1860
          revision: 30
          datasource: prometheus
      network:
        # Ref: https://grafana.com/grafana/dashboards/11315
        clients:
          gnetId: 11315
          revision: 9
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        usw:
          gnetId: 11312
          revision: 9
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        uap:
          gnetId: 11314
          revision: 10
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        sites:
          gnetId: 11311
          revision: 5
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        usg:
          gnetId: 11313
          revision: 9
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        dpi:
          gnetId: 11310
          revision: 5
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus
        security:
          # Ref: https://grafana.com/grafana/dashboards/14837
          authentik:
            gnetId: 14837
            revision: 2
            datasource:
              - name: "DS_PROMETHEUS"
                value: prometheus
      storage:
        # Ref: https://grafana.com/grafana/dashboards/2842/
        ceph-cluster:
          gnetId: 2842
          revision: 17
        # Ref: https://grafana.com/grafana/dashboards/5336/
        ceph-osds:
          gnetId: 5336
          revision: 9
        # Ref: https://grafana.com/grafana/dashboards/5342/
        ceph-pools:
          gnetId: 5342
          revision: 9
      # spring-boot:
      #   spring-boot-3:
      #     gnetId: 19004
      #     revision: 1
      apm:
        # Ref: https://grafana.com/grafana/dashboards/19419-opentelemetry-apm/
        apm:
          gnetId: 19419
          revision: 4
          datasource:
            - name: "DS_PROMETHEUS"
              value: prometheus

    deploymentStrategy:
      type: Recreate

    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_LOG_FILTERS: rendering:debug
      GF_PANELS_DISABLE_SANATIZE_HTML: true
      GF_SECURITY_COOKIE_SAMESITE: grafana

    envFromSecrets:
      - name: grafana-secret

    extraSecretMounts:
      - name: pg-grafana-app-secret
        mountPath: /etc/secrets/db
        secretName: pg-grafana-app
        defaultMode: 0444
        readOnly: true
      - name: pg-blocky-app-secret
        mountPath: /etc/secrets/blocky
        secretName: pg-blocky-app
        defaultMode: 0444
        readOnly: true

    grafana.ini:
      analytics:
        check_for_updates: false
      auth:
        oauth_auto_login: true
      auth.generic_oauth:
        enabled: true
        name: Authentik
        icon: signin
        scopes: openid profile email
        empty_scopes: false
        use_pkce: true
      auth.generic_oauth.group_mapping:
        org_id: 1
        role_attribute_path: |
          contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
      auth.basic:
        # enabled: false
        enabled: true
      auth.anonymous:
        enabled: false
      database:
        type: postgres
        host: $__file{/etc/secrets/db/host}:$__file{/etc/secrets/db/port}
        name: $__file{/etc/secrets/db/dbname}
        user: $__file{/etc/secrets/db/username}
        password: $__file{/etc/secrets/db/password}
      paths:
        data: /var/lib/grafana/data
      server:
        root_url: https://grafana.${SECRET_DOMAIN}

    imageRenderer:
      enabled: true
      serviceMonitor:
        enabled: true

    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/enable: "true"
        hajimari.io/icon: "simple-icons:grafana"
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
      hosts:
        - &host grafana.${SECRET_DOMAIN}
        - monitor.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
            - monitor.${SECRET_DOMAIN}
          secretName: grafana-tls-external

    persistence:
      enabled: true
      type: pvc
      finalizers:
        - kubernetes.io/pvc-protection
      existingClaim: grafana

    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
      - isovalent-hubble-datasource

    podAnnotations:
      configmap.reloader.stakater.com/reload: grafana
      secret.reloader.stakater.com/reload: grafana-secrets,pg-grafana-app,pg-blocky-app

    rbac:
      pspEnabled: false

    resources:
      limits:
        memory: 219Mi
      requests:
        cpu: 23m
        memory: 127Mi

    service:
      enabled: true
      type: ClusterIP
      port: 3000
      targetPort: 3000
      portName: service

    serviceMonitor:
      enabled: true

    sidecar:
      logLevel: INFO
      alerts:
        enabled: true
        label: grafana.io/alert
        labelValue: "true"
      dashboards:
        enabled: true
        label: grafana.io/dashboard
        labelValue: "true"
        folderAnnotation: "grafana.io/folder"
        searchNamespace: ALL
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        label: grafana.io/datasource
        labelValue: "true"
        searchNamespace: ALL
      notifiers:
        enabled: true
        label: grafana.io/notifier
        labelValue: "true"
        searchNamespace: ALL
      plugins:
        enabled: true
        label: grafana.io/plugin
        labelValue: "true"
        searchNamespace: ALL

    topologySpreadConstraints:
      - maxSkew: 2
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
