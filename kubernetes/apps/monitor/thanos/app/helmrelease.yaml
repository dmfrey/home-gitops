---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitor
spec:

  interval: 5m
  timeout: 5m

  chart:
    spec:
      chart: thanos
      version: 13.3.0
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  
  install:
    remediation:
      retries: 3
  
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  
  uninstall:
    keepHistory: false
 
  values:
  
    existingObjstoreSecret: thanos-secret

    query:
      enabled: true
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitor
      replicaCount: 3
      replicaLabel:
        - "__replica__" # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      resources:
        requests:
          cpu: 15m
          memory: 64M
        # limits:
        #   memory: 99M

    queryFrontend:
      enabled: true
      replicaCount: 3
      config: &config |-
        type: REDIS
        config:
          addr: >-
            thanos-redis-replicas-0.thanos-redis-headless.monitor.svc.cluster.local:26379,
            thanos-redis-replicas-1.thanos-redis-headless.monitor.svc.cluster.local:26379,
            thanos-redis-replicas-2.thanos-redis-headless.monitor.svc.cluster.local:26379
          db: 13
          master_name: thanos-redis-master
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:alpha-t-box"
          external-dns.alpha.kubernetes.io/target: ingress-ext.dmfrey.com
        hostname: &host thanos.${EXTERNAL_DOMAIN}
        ingressClassName: nginx-external
        tls: false
        extraTls:
          - hosts:
              - *host
            secretName: thanos-tls-external

    bucketweb:
      enabled: true
      replicaCount: 3
      resources:
        requests:
          cpu: 15m
          memory: 64M

    compactor:
      enabled: true
      extraFlags:
        - "--compact.concurrency=4"
        - "--delete-delay=30m"
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      resources:
        requests:
          cpu: 15m
          memory: 204M
        # limits:
        #   memory: 270M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 15Gi

    storegateway:
      enabled: true
      extraEnvVarsSecret: "thanos-ceph-bucket"
      replicaCount: 3
      config: *config
      resources:
        requests:
          cpu: 23m
          memory: 204M
        # limits:
        #   memory: 226M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 1Gi

    ruler:
      enabled: true
      alertmanagers:
        - http://alert-manager.monitor.svc.cluster.local:9093
      # Breaks metrics that have cluster label due to conflict with cnpg
      # clusterName: ${CLUSTER_NAME} # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      replicaLabel: __replica__
      replicaCount: 3
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 512Mi
      resources:
        requests:
          cpu: 23m
          memory: 94M
        limits:
          memory: 113M

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
