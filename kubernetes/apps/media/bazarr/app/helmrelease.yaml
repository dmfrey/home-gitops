---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media
spec:
  
  interval: 15m
  
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  
  maxHistory: 2
  
  install:
    createNamespace: true
    remediation:
      retries: 3
  
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  
  uninstall:
    keepHistory: false

  values:
    
    # yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.1.0/charts/library/common/values.schema.json
    defaultPodOptions:
      enableServiceLinks: true
      securityContext:
        runAsUser: 1568
        runAsGroup: 1568
        fsGroup: 1568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65534

    controllers:
      bazarr:
        type: statefulset
        
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.4.2@sha256:7ea2869565d63bde8fd97d239de4bf5d16ba6f8db3f343b760e87ce4460951a0

            env:
              TZ: ${TIMEZONE}
              BAZARR__INSTANCE_NAME: Bazarr
              BAZARR__PORT: &port 6767
              BAZARR__APPLICATION_URL: https://bazarr.${SECRET_DOMAIN}
              BAZARR__LOG_LEVEL: info
              BAZARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: BAZARR_API_KEY

            ports:
              - name: http
                containerPort: *port

            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

    service:
      app:
        controller: bazarr
        ports:
          http:
            port: *port

    ingress:
      app:
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "solar:subtitles-outline"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host bazarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: bazarr-tls-external

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          bazarr:
            app:
              - path: /config

      media:
        existingClaim: nfs-media

      backups:
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /plexbackups/backups/bazarr
        globalMounts:
          - path: /config/backup
            readOnly: false

    serviceMonitor:
      monitor:
        serviceName: bazarr-monitor
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 15m
            scrapeTimeout: 2m
