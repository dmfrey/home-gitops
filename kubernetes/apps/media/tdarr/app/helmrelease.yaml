---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app tdarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  
  values:

    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 34
          - 44
          - 109
          - 1568
          - 65534
        capabilities:
          add:
            - CHOWN

    controllers:
      main:

        containers:
          main:
            image:
              repository: ghcr.io/haveagitgat/tdarr_acc
              tag: 2.00.20.1

            env:
              TZ: ${TIMEZONE}
              PUID: "1000"
              PGID: "1000"
              ffmpegPath: "/usr/local/bin/ffmpeg"
              TDARR_INSTANCE_NAME: Tdarr
              TDARR__PORT: &port 8265
              TDARR__APPLICATION_URL: &host "tdarr.${SECRET_DOMAIN}"
              TDARR__LOG_LEVEL: info

            ports:
              - name: http
                containerPort: &port 8265
              - name: server
                containerPort: &serverPort 8266

            resources:
              requests:
                cpu: 10m
                memory: 250Mi

    service:
      main:
        controller: main
        ports:
          http:
            port: *port
      server:
        controller: main
        ports:
          http:
            protocol: TCP
            port: *serverPort

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: clarity:media-changer-solid
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: main
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: tdarr-tls-external

    persistence:
      config:
        enabled: true
        existingClaim: tdarr-config
        globalMounts:
          - path: /app/configs
      data:
        enabled: true
        existingClaim: tdarr-data
        globalMounts:
          - path: /app/server
      cache:
        enabled: true
        existingClaim: tdarr-cache
      media:
        enabled: true
        existingClaim: nfs-media

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /plexbackups/backups/tdarr
        globalMounts:
          - path: /app/server/Tdarr/Backups
            readOnly: false
