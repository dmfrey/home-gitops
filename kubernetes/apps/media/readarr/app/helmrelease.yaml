---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app readarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:

    controllers:
      main:
        type: statefulset
        annotions:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
            runAsNonRoot: true
            fsGroup: 65534
            fsGroupChangePolicy: OnRootMismatch

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/readarr-nightly
              tag: 0.3.15.2376@sha256:19b5caf5adee8c931e9fcb3e328e2a65a951b9490fb8f1fd289d60e4ef98db24

            env:
              TZ: America/New_York
              READARR__INSTANCE_NAME: Readarr
              READARR__PORT: &port 8787
              READARR__APPLICATION_URL: https://readarr.${EXTERNAL_DOMAIN}
              READARR__LOG_LEVEL: info
              READARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: READARR_API_KEY

            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

          # sidecars:
          exporter:
            dependsOn: main
            name: exporter
            
            image: 
              repository: ghcr.io/onedr0p/exportarr
              tag: v1.6.0

            args: ["readarr"]
            
            env:
              - name: URL
                value: "http://localhost"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9711
              - name: ENABLE_ADDITIONAL_METRICS
                value: true
              - name: ENABLE_UNKNOWN_QUEUE_ITEMS
                value: false
            
            ports:
              - name: metrics
                containerPort: *metricsPort 

    service:
      main:
        ports:
          http:
            port: *port
      metrics:
        controller: exporter
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        className: external-nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "material-symbols:book-outline-rounded"
        hosts:
          - host: &host readarr.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: readarr-tls-external

    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

      media:
        enabled: true
        existingClaim: nfs-media
        globalMounts:
          - path: /media/library
            readOnly: false
    
      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /plexbackups/backups/readarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: readarr-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 15m
            scrapeTimeout: 2m
