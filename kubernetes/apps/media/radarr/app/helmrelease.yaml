---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:

    defaultPodOptions:
      securityContext:
        runAsUser: 1568
        runAsGroup: 1568
        fsGroup: 1568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65534

    controllers:
      main:
        type: statefulset
        
        annotations:
          reloader.stakater.com/auto: "true"

        replicas: 1
        strategy: RollingUpdate

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr
              tag: 5.3.6.8612@sha256:431f4d8da415645cd18359d0b704d4191f400eb57137ed3e5749774f3915c0a8

            env:
              TZ: ${TIMEZONE}
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 7878
              RADARR__APPLICATION_URL: https://radarr.${SECRET_DOMAIN}
              RADARR__LOG_LEVEL: info
              RADARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: RADARR_API_KEY

            ports:
              - name: http
                containerPort: *port 

            resources:
              requests:
                memory: 1024Mi
                cpu: 5m
              limits:
                memory: 2048Mi

          # sidecars:
          exporter:
            name: exporter
            
            image: 
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.0
            
            args: ["radarr"]
            
            env:
              - name: URL
                value: "http://localhost"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9708
              - name: ENABLE_ADDITIONAL_METRICS
                value: true
              - name: ENABLE_UNKNOWN_QUEUE_ITEMS
                value: false
            
            ports:
              - name: metrics
                containerPort: *metricsPort 
          
    service:
      main:
        ports:
          http:
            port: *port
      metrics:
        controller: exporter
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:movie-open-outline"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid,Authorization
        hosts:
          - host: &host radarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: radarr-tls-external
    
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

      media:
        enabled: true
        existingClaim: nfs-media

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /plexbackups/backups/radarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: radarr-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 15m
            scrapeTimeout: 2m
