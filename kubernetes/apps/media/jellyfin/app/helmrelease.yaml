---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
  namespace: media

spec:

  interval: 15m

  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  
  maxHistory: 2
  
  install:
    createNamespace: true
    remediation:
      retries: 3
  
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  
  uninstall:
    keepHistory: false
  
  values:

    defaultPodOptions:
      enableServiceLinks: false

      securityContext:
        runAsUser: 1568
        runAsGroup: 1568
        fsGroup: 1568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 44 # video
          - 109 # render
          - 65534

    controllers:

      jellyfin:
        type: statefulset
        
        annotations:
          reloader.stakater.com/auto: "true"

        containers:

          app:

            image:
              repository: jellyfin/jellyfin
              tag: 10.8.13-1
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              PUID: 1568
              PGID: 1568
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: https://jellyfin.${SECRET_DOMAIN}

            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                amd.com/gpu: 1
                cpu: 1
                memory: 1Gi
              limits:
                amd.com/gpu: 1
                memory: 3Gi

    service:
      app:
        controller: jellyfin
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          external-dns.alpha.kubernetes.io/hostname: jellyfin.${SECRET_DOMAIN}
          io.cilium/lb-ipam-ips: ${SVC_JELLYFIN_ADDR}
        ports:
          http:
            port: &port 8096

    ingress:
      app:
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:jellyfin
          hajimari.io/url: "https://jellyfin.${SECRET_DOMAIN}/web/index.html"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host "jellyfin.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        tls:
        - hosts:
          - *host
          secretName: jellyfin-tls-external

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
      
      media:
        enabled: true
        existingClaim: nfs-media

      transcode:
        enabled: true
        type: custom
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                storageClassName: ceph-block
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
                  limits:
                    storage: 500Gi
        globalMounts:
          - path: /config/transcodes
            readOnly: false

      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /config/cache
            readOnly: false

