---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:

    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: 4.0.0.749@sha256:6e3ea9e0f6a965e27a08fc30716f1b6aec5480d8e60db6e03ec17d2f8bff952f

    env:
      TZ: America/New_York
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      SONARR__APPLICATION_URL: https://sonarr.${EXTERNAL_DOMAIN}
      SONARR__LOG_LEVEL: info
      SONARR__API_KEY:
        valueFrom:
          secretKeyRef:
            name: starr-apps-secret
            key: SONARR_API_KEY

    sidecars:
      exporter:
        name: exporter
        image: ghcr.io/onedr0p/exportarr:v1.6.0
        args: ["sonarr"]
        env:
          - name: URL
            value: "http://localhost"
          - name: CONFIG
            value: "/config/config.xml"
          - name: PORT
            value: &metricsPort 9707
          - name: ENABLE_ADDITIONAL_METRICS
            value: true
          - name: ENABLE_UNKNOWN_QUEUE_ITEMS
            value: false
        ports:
          - name: metrics
            containerPort: *metricsPort 
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true

    service:
      main:
        ports:
          http:
            port: *port
      metrics:
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        ingressClassName: external-nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:television-classic"
        hosts:
          - host: &host sonarr.${EXTERNAL_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: sonarr-tls-external

    persistence:
      media:
        enabled: true
        existingClaim: nfs-media
        mountPath: /media/library
        readOnly: false
      downloads:
        enabled: true
        existingClaim: media-downloads
        mountPath: /media/downloads
        readOnly: false

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /plexbackups/backups/sonarr
        mountPath: /config/Backups
        readOnly: false

    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block

    podSecurityContext:
      runAsUser: 65534
      runAsGroup: 65534
      fsGroup: 65534
      fsGroupChangePolicy: OnRootMismatch
      # supplementalGroups:
      #   - 65534

    resources:
      requests:
        memory: 350Mi
        cpu: 5m
      limits:
        memory: 431Mi

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: sonarr-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 15m
            scrapeTimeout: 2m

