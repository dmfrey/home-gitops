---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
  namespace: media
spec:
  
  interval: 15m
  
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  
  maxHistory: 2
  
  install:
    createNamespace: true
    remediation:
      retries: 3
  
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  
  uninstall:
    keepHistory: false

  values:

    defaultPodOptions:
      securityContext:
        runAsUser: 1568
        runAsGroup: 1568
        fsGroup: 1568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 100
          - 65534

    controllers:
      
      sonarr:
        type: statefulset
        
        annotations:
          reloader.stakater.com/auto: "true"

        replicas: 1
        strategy: RollingUpdate

        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/sonarr
              tag: 4.0.5.1710

            env:
              TZ: ${TIMEZONE}
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__APPLICATION_URL: https://sonarr.${SECRET_DOMAIN}
              SONARR__LOG_LEVEL: info
              SONARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: SONARR_API_KEY

            ports:
              - name: http
                containerPort: *port 

            resources:
              requests:
                memory: 350Mi
                cpu: 100m
              limits:
                memory: 1024Mi

          # sidecars:
          exporter:
            dependsOn: app
            
            image: 
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1

            args: ["sonarr"]
            
            env:
              - name: URL
                value: "http://localhost"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9707
              - name: ENABLE_ADDITIONAL_METRICS
                value: true
              - name: ENABLE_UNKNOWN_QUEUE_ITEMS
                value: false
            
            ports:
              - name: metrics
                containerPort: *metricsPort 

    service:
      app:
        nameOverride: sonarr
        controller: sonarr
        ports:
          http:
            port: *port
      metrics:
        controller: sonarr
        ports:
          metrics:
            port: *metricsPort

    ingress:
      app:
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:television-classic"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: &host sonarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: sonarr-tls-external

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}

      media:
        enabled: true
        existingClaim: nfs-media

      backups:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${QNAP_ADDR}"
            path: /plexbackups/backups/sonarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: sonarr-metrics
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 15m
            scrapeTimeout: 2m

