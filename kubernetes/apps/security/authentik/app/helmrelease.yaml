---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: authentik
  namespace: security

spec:

  interval: 15m

  chart:
    spec:
      chart: authentik
      version: 2024.4.2
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system

  install:
    remediation:
      retries: 3
  
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  
  uninstall:
    keepHistory: false

  values:
    
    global:
      storageClass: ceph-block

      image:
        repository: ghcr.io/goauthentik/server
        tag: 2024.4.2
        pullPolicy: IfNotPresent

      envFrom:
        - secretRef:
            name: authentik-secret
      
      # envValueFrom:
      #   AUTHENTIK_POSTGRESQL__NAME:
      #     secretKeyRef:
      #       name: pg-authentik-app
      #       key: username
      #   AUTHENTIK_POSTGRESQL__USER:
      #     secretKeyRef:
      #       name: pg-authentik-app
      #       key: username
      #   AUTHENTIK_POSTGRESQL__PASSWORD:
      #     secretKeyRef:
      #       name: pg-authentik-app
      #       key: password

      # volumes:
      #   - configMap:
      #       name: authentik-branding
      #     name: branding
      # volumeMounts:
      #   - mountPath: /media/branding
      #     name: branding

    authentik:
      security_key: ""
      avatars: "gravatar,initials"
      log_level: info
      error_reporting:
        enabled: false
        send_pii: false
      postgresql:
        host: file:///postgres-creds/host
        port: 5432
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password
      email:
        host: "smtp-relay.network.svc.cluster.local"
        port: 2525
        use_tls: false
        from: "authentik@${SECRET_DOMAIN}"
    
    # geoip:
    #   enabled: true
    #   accountId: "878850"
    #   licenseKey: ${SECRET_MAXMIND_LICENSE_KEY}
    #   editionIds: "GeoLite2-City"
    #   image: ghcr.io/maxmind/geoipupdate:v6.0.0
    #   updateInterval: 8

    # blueprints: 
    #   configMaps: []
    #   secrets: []

    prometheus:
      rules:
        enabled: true

    redis:
      enabled: true
      master:
        securityContext:
          enabled: true

    server:

      deploymentAnnotations:
        secret.reloader.stakater.com/reload: pg-authentik-app

      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          hajimari.io/enable: "true"
          hajimari.io/icon: "material-symbols:security-rounded"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.org/websocket-services: authentik
          nginx.ingress.kubernetes.io/enable-global-auth: "false"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
        - auth.${SECRET_DOMAIN}
        pathType: "Prefix"
        paths:
          - "/"

        tls:
        - hosts:
          - auth.${SECRET_DOMAIN}
          secretName: authentik-tls-external

      metrics:
        serviceMonitor:
          enabled: true
    
      volumes: &postgresCredsVolume
        - name: postgres-creds
          secret:
            secretName: pg-authentik-app
      volumeMounts: &postgresCredsVolumeMounts
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true

    worker:
      volumes: *postgresCredsVolume
      volumeMounts: *postgresCredsVolumeMounts
