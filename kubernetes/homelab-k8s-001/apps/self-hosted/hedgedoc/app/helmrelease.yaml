---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app hedgedoc

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:

      *app :
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          backend:
            image:
              repository: ghcr.io/hedgedoc/hedgedoc/backend
              pullPolicy: IfNotPresent
              tag: develop  # 2.0.0-alpha.3

            env:
              TZ: America/New_York
              HD_LOGLEVEL: trace  # debug info
              HD_BASE_URL: https://kb.dmfrey.com

              # Database settings
              HD_DATABASE_TYPE: postgres
              HD_DATABASE_HOST:
                valueFrom:
                  secretKeyRef:
                    name: pg-hedgedoc-app
                    key: host
              HD_DATABASE_PORT:
                valueFrom:
                  secretKeyRef:
                    name: pg-hedgedoc-app
                    key: port
              HD_DATABASE_NAME:
                valueFrom:
                  secretKeyRef:
                    name: pg-hedgedoc-app
                    key: dbname
              HD_DATABASE_USER:
                valueFrom:
                  secretKeyRef:
                    name: pg-hedgedoc-app
                    key: user
              HD_DATABASE_PASS:
                valueFrom:
                  secretKeyRef:
                    name: pg-hedgedoc-app
                    key: password

              # Uploads
              # HD_MEDIA_BACKEND: filesystem
              # HD_MEDIA_BACKEND_FILESYSTEM_UPLOAD_PATH: uploads/
              HD_MEDIA_BACKEND: s3
              HD_MEDIA_BACKEND_S3_BUCKET: *app
              HD_MEDIA_BACKEND_S3_ENDPOINT: http://192.168.30.5:9000
              # HD_MEDIA_BACKEND_S3_REGION: home
              HD_MEDIA_BACKEND_S3_PATH_STYLE: true

              # Auth
              # HD_AUTH_LOCAL_ENABLE_LOGIN: true
              # HD_AUTH_LOCAL_ENABLE_REGISTER: true
              HD_AUTH_OIDC_SERVERS: AUTHENTIK
              HD_AUTH_OIDC_AUTHENTIK_PROVIDER_NAME: Sign-in with Authentik
              HD_AUTH_OIDC_AUTHENTIK_ISSUER: https://auth.dmfrey.com/application/o/hedgedoc/
              HD_AUTH_OIDC_AUTHENTIK_ENABLE_REGISTER: false

            envFrom: &envFromSecret
              - secretRef:
                  name: hedgedoc-secret

          frontend:
            image:
              repository: ghcr.io/hedgedoc/hedgedoc/frontend
              pullPolicy: IfNotPresent
              tag: develop  # 2.0.0-alpha.3

            env:
              HD_BASE_URL: "https://kb.dmfrey.com"
              HD_INTERNAL_API_URL: http://hedgedoc.self-hosted.svc.cluster.local:3000
              HD_LOGLEVEL: trace  # debug info

    service:
      *app :
        controller: *app
        ports:
          backend:
            port: 3000
          http:
            port: &port 3001

    route:
      *app :
        hostnames: ["kb.dmfrey.com"]
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "simple-icons:hedgedoc"
          hajimari.io/appName: "Hedgedoc"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    # ingress:
    #   external:
    #     className: external
    #     annotations:
    #       nginx.org/websocket-services: *app

    #       hajimari.io/enable: "true"
    #       hajimari.io/icon: "simple-icons:hedgedoc"
    #       hajimari.io/appName: "Hedgedoc"

    #       external-dns.alpha.kubernetes.io/target: "external.dmfrey.com"
    #     hosts:
    #       - host: &host "kb.dmfrey.com"
    #         paths:
    #           - path: /
    #             service:
    #               identifier: *app
    #               port: http

    # persistence:
    #   config:
    #     existingClaim: ${VOLSYNC_CLAIM}
