---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homepage

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:

    controllers:
      *app :
        replicas: 1
        strategy: RollingUpdate

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v1.0.0

            env:
              TZ: ${TIMEZONE}
              # PUID: 1000
              # PGID: 1000
              HOMEPAGE_ALLOWED_HOSTS: "{{ .Release.Name }}.${SECRET_DOMAIN}"

            envFrom:
              - secretRef:
                  name: homepage-secret

            resources:
              requests:
                cpu: 15m
                memory: 200M
              limits:
                memory: 2G

            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }

    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch
    #     seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: 3000

    ingress:
      internal:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: http

    persistence:
      # config:
        # existingClaim: ${VOLSYNC_CLAIM}
        # globalMounts:
          # - path: /app

      config-settings:
        type: configMap
        name: homepage-config
        globalMounts:
          - subPath: bookmarks.yaml
            path: /app/config/bookmarks.yaml
          - subPath: docker.yaml
            path: /app/config/docker.yaml
          - subPath: kubernetes.yaml
            path: /app/config/kubernetes.yaml
          - subPath: services.yaml
            path: /app/config/services.yaml
          - subPath: settings.yaml
            path: /app/config/settings.yaml
          - subPath: widgets.yaml
            path: /app/config/widgets.yaml

    serviceAccount:
      create: true
      name: *app
