---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: pg-openweb
  annotations:
    cnpg.io/skipEmptyWalArchiveCheck: "enabled"
    secret.reloader.stakater.com/reload: pg-openweb-cnpg-secret

spec:

  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.10

  backup:
    volumeSnapshot:
      className: csi-ceph-blockpool

  bootstrap:
    initdb:
      dataChecksums: true
      database: openweb
      owner: openweb
      encoding: "UTF8"
      localeCollate: en_US.utf8
      localeCType: en_US.utf8

  monitoring:
    enablePodMonitor: true

  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters:
        barmanObjectName: linkwarden

  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 256MB # amount of RAM to use for data caching, https://postgresqlco.nf/doc/en/param/shared_buffers/

  primaryUpdateStrategy: unsupervised # let k8s handle upgrades
  primaryUpdateMethod: restart # prefer downtime of image download from registry instead of switching primary instance (promote a standby instance to primary) when current primary pod is updated

  storage:
    size: 25Gi
    storageClass: ceph-block

  walStorage:
    storageClass: ceph-block
    size: 25Gi

    # recovery:
    #   source: clusterBackup
    #   database: openweb
    #   owner: openweb
    #   recoveryTarget: {}
    #     targetTime: "2025-09-15 23:59:59.00000+01"

  # externalClusters:
  #   - name: clusterBackup
  #     barmanObjectStore:
  #       serverName: pg-openweb
  #       wal:
  #         compression: gzip
  #         maxParallel: 8
  #       destinationPath: s3://cnpg/
  #       endpointURL: http://minio.internal:9000
  #       s3Credentials:
  #         accessKeyId:
  #           name: pg-openweb-cnpg-secret
  #           key: AWS_SECRET_ACCESS_KEY_ID
  #         secretAccessKey:
  #           name: pg-openweb-cnpg-secret
  #           key: AWS_SECRET_ACCESS_KEY

