---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos

spec:

  interval: 15m

  chart:
    spec:
      chart: thanos
      version: 1.18.2
      sourceRef:
        kind: HelmRepository
        name: stevehipwell
        namespace: flux-system

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  valuesFrom:
    - targetPath: objstoreConfig.config.bucket
      kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_NAME
    - targetPath: objstoreConfig.config.endpoint
      kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.config.region
      kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_REGION
    - targetPath: objstoreConfig.config.access_key
      kind: Secret
      name: thanos-ceph-bucket
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.config.secret_key
      kind: Secret
      name: thanos-ceph-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY

  values:

    commonAnnotations:
      secret.reloader.stakater.com/reload: thanos-ceph-bucket

    objstoreConfig:
      type: s3
      config:
        insecure: true

    receive:
      enabled: true
      replicaCount: 3
      logLevel: debug
      networkPolicy: &networkPolicy
        enabled: false
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 24Gi
      resourcesPreset: "medium"

    query:
      enabled: true
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitor
      networkPolicy: *networkPolicy
      replicaCount: 1
      replicaLabel:
        - "__replica__" # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      resources:
        requests:
          cpu: 15m
          memory: 64M
        # limits:
        #   memory: 99M
      stores:
        - thanos-storegateway:10901

    queryFrontend:
      enabled: true
      replicaCount: 1
      # config:
      #   type: REDIS
      #   config:
      #     addr: "thanos-dragonfly-cluster.monitor.svc.cluster.local:6379"
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:alpha-t-box"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hostname: thanos.${SECRET_DOMAIN}
        tls: false

    bucketweb:
      enabled: true
      networkPolicy: *networkPolicy
      replicaCount: 1
      resources:
        requests:
          cpu: 15m
          memory: 64M

    compactor:
      enabled: true
      extraFlags:
        - --compact.concurrency=4
        - --delete-delay=30m
      networkPolicy: *networkPolicy
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      resources:
        requests:
          cpu: 15m
          memory: 204M
        # limits:
        #   memory: 270M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 15Gi

    storegateway:
      enabled: true
      # extraEnvVarsSecret: "thanos-ceph-bucket"
      logLevel: debug
      replicaCount: 1
      config:
        type: REDIS
        config:
          addr: "thanos-dragonfly-cluster.monitor.svc.cluster.local:6379"
      containerPorts:
        http: 10902
        grpc: 10901
      livenessProbe:
        initialDelaySeconds: 30
      readinessProbe:
        initialDelaySeconds: 30
      networkPolicy: *networkPolicy
      resources:
        requests:
          cpu: 1
          memory: 2048M
        limits:
          memory: 4096M
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 10Gi
      service:
        ports:
          http: 10902
          grpc: 10901

    ruler:
      enabled: true
      alertmanagers:
        - http://alert-manager.monitor.svc.cluster.local:9093
      # Breaks metrics that have cluster label due to conflict with cnpg
      # clusterName: ${CLUSTER_NAME} # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      networkPolicy: *networkPolicy
      replicaLabel: __replica__
      replicaCount: 1
      config: |-
        groups:
          - name: PrometheusWatcher
            rules:
              - alert: PrometheusDown
                annotations:
                  summary: A Prometheus has disappeared from Prometheus target discovery
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
                for: 5m
                labels:
                  severity: critical
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: "ceph-block"
        size: 10Gi
      resources:
        requests:
          cpu: 23m
          memory: 94M
        limits:
          memory: 113M

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
