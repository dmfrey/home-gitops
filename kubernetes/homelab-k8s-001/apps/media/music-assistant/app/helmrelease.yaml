---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: music-assistant
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 4.3.0
  url: oci://ghcr.io/bjw-s-labs/helm/app-template
---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app music-assistant
spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: music-assistant

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        # initContainers:
        #   fix-permissions:
        #     image:
        #       repository: busybox
        #       tag: stable

        #     command: ["sh", "-c", "chown -R 1000:1000 /data/* /data/.cache"]

        #     securityContext:
        #       runAsNonRoot: false
        #       readOnlyRootFilesystem: true
        #       allowPrivilegeEscalation: true
        #       runAsUser: 0
        #       runAsGroup: 0
        #       capabilities: { add: ["CHOWN", "FOWNER", "DAC_OVERRIDE"], drop: ["ALL"] }

        containers:
          *app :
            image:
              repository: ghcr.io/music-assistant/server
              tag: 2.6.0  # 2.6.0@sha256:9b0b0c8476e5b208265cbede313558ca20202bbeaebfd70a3467081e75827e67

            env:
              TZ: America/New_York
              LOG_LEVEL: debug

            resources:
              requests:
                cpu: 500m
                memory: 1Gi
              limits:
                cpu: 1000m
                memory: 2Gi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { add: ["DAC_READ_SEARCH", "SYS_ADMIN"] }

        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"iot-vlan",
                "namespace": "network",
                "ips": ["192.168.50.5/24"],
                "mac": "ae:81:6a:d4:48:85"
              }]

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        # seccompProfile: { type: RuntimeDefault }
        supplementalGroups:
          - 100

    service:
      *app :
        controller: *app
        # type: LoadBalancer
        # annotations:
          # lbipam.cilium.io/ips: 192.168.30.245 #, ::ffff:192.168.30.245
        # externalTrafficPolicy: Local
        ports:
          http:
            port: &port 8095
          stream:
            port: &streamPort 8097
          http2:
            port: 1780
          snapserver-player:
            port: 1704
          snapserver-control:
            port: 1705
          squeeze-cli:
            port: 9090
          squeeze-rpc:
            port: 9000
          squeeze-slimproto:
            port: 3483

    route:
      *app :
        hostnames: ["music.dmfrey.com"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /data

      media:
        type: nfs
        server: nas.internal
        path: /media/music/
        globalMounts:
          - path: /media

      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /tmp

      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /.audio
            subPath: .audio
