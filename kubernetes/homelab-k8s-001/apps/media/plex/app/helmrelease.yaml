---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex

spec:

  interval: 15m

  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          backup.home.arpa/enabled: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.3.9314-a0bfb8370@sha256:4e004defdf450e5d86ce8c29f2dc62fa95fa12dfaae52fd36c948427eb186952

            env:
              TZ: ${TIMEZONE}
              PLEX_ADVERTISE_URL: https://plex.${SECRET_DOMAIN}:443,http://${SVC_PLEX_ADDR}:32400,plex.media.svc.cluster.local:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.0.0/16
              PLEX_PREFERENCE_NAME: "FriendlyName=${ORGANIZATION}"
              PLEX_PREFERENCE_DLNA: "DlnaEnabled=1"
              PLEX_PREFERENCE_GDM: "GdmEnabled=1"
              PLEX_PREFERENCE_GPU: "HardwareAcceleratedCodecs=1"
              PLEX_PREFERENCE_INTERFACE: "PreferredNetworkInterface=eth0"
              PLEX_PREFERENCE_PORT_MAPPING: "ManualPortMappingMode=1"
              PLEX_PREFERENCE_MAPPED_PORT: "ManualPortMappingPort=443"
              PLEX_PREFERENCE_LAN: "LanNetworksBandwidth=192.168.0.0/16"

            envFrom:
              - secretRef:
                  name: plex-secret

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10

            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 500m
                memory: 2Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 10Gi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 1568, 10000, 65534]
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      *app :
        controller: *app
        type: LoadBalancer
        # externalTrafficPolicy: Cluster
        annotations:
          external-dns.alpha.kubernetes.io/hostname: &host plex.${SECRET_DOMAIN}
          lbipam.cilium.io/ips: ${SVC_PLEX_ADDR}
        ports:
          http:
            port: &port 32400
            primary: true
          dnla-tcp:
            port: 32469
            protocol: TCP
          dnla-udp:
            port: 1900
            protocol: UDP
          bonjour-udp:
            port: 5353
            protocol: UDP
          gdm-1:
            port: 32410
            protocol: UDP
          gdm-2:
            port: 32412
            protocol: UDP
          gdm-3:
            port: 32413
            protocol: UDP
          gdm-4:
            port: 32414
            protocol: UDP

    ingress:
      external:
        className: external
        annotations:
          theme.home.arpa/enabled: "true"

          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:plex"
          hajimari.io/url: "https://plex.${SECRET_DOMAIN}/web"

          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Video
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex.png
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media.svc.cluster.local:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"

          # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        hosts:
        - host: *host
          paths:
          - path: /
            service:
              identifier: *app
              port: http

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config

      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs

      media:
        existingClaim: nfs-media

      transcode:
        type: custom
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                storageClassName: ceph-block
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 500Gi

      tmp:
        type: emptyDir
        sizeLimit: 10Gi

      backup:
        type: nfs
        server: "${QNAP_ADDR}"
        path: /plexbackups/backups/plex
        globalMounts:
          - path: /config/Backups
            readOnly: false
