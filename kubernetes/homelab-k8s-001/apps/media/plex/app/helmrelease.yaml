---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: plex
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 4.3.0
  url: oci://ghcr.io/bjw-s-labs/helm/app-template
---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: plex

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          backup.home.arpa/enabled: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/plex
              tag: 1.42.2.10156

            env:
              TZ: America/New_York
              PLEX_ADVERTISE_URL: https://plex.dmfrey.com:443,http://192.168.30.227:32400,plex.media.svc.cluster.local:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.0.0/16
              PLEX_PREFERENCE_NAME: "FriendlyName=homelab5767"
              PLEX_PREFERENCE_DLNA: "DlnaEnabled=1"
              PLEX_PREFERENCE_GDM: "GdmEnabled=1"
              PLEX_PREFERENCE_GPU: "HardwareAcceleratedCodecs=1"
              PLEX_PREFERENCE_INTERFACE: "PreferredNetworkInterface=eth0"
              PLEX_PREFERENCE_PORT_MAPPING: "ManualPortMappingMode=1"
              PLEX_PREFERENCE_MAPPED_PORT: "ManualPortMappingPort=443"
              PLEX_PREFERENCE_LAN: "LanNetworksBandwidth=192.168.0.0/16"

            envFrom:
              - secretRef:
                  name: plex-secret

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10

            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 500m
                memory: 2Gi
              limits:
                gpu.intel.com/i915: 1
                memory: 10Gi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 568, 1568, 10000, 65534]
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          # external-dns.alpha.kubernetes.io/hostname: &host plex.dmfrey.com
          lbipam.cilium.io/ips: 192.168.30.227 #, ::ffff:192.168.30.227
        ports:
          http:
            port: &port 32400
            primary: true
          # dnla-tcp:
          #   port: 32469
          #   protocol: TCP
          # dnla-udp:
          #   port: 1900
          #   protocol: UDP
          # bonjour-udp:
          #   port: 5353
          #   protocol: UDP
          # gdm-1:
          #   port: 32410
          #   protocol: UDP
          # gdm-2:
          #   port: 32412
          #   protocol: UDP
          # gdm-3:
          #   port: 32413
          #   protocol: UDP
          # gdm-4:
          #   port: 32414
          #   protocol: UDP

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.dmfrey.com"
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Video
          gethomepage.dev/name: Plex
          gethomepage.dev/icon: plex.png
          gethomepage.dev/description: Media Player
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.media.svc.cluster.local:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
            filters:
              - type: RequestHeaderModifier
                requestHeaderModifier:
                  remove: ["Range"]
            matches:
              - path:
                  type: PathPrefix
                  value: /library/streams
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config

      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache

      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs

      media:
        type: nfs
        server: nas.internal
        path: /media

      transcode:
        type: custom
        volumeSpec:
          ephemeral:
            volumeClaimTemplate:
              spec:
                storageClassName: ceph-block
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 500Gi

      tmp:
        type: emptyDir
        sizeLimit: 10Gi

      backup:
        type: nfs
        server: nas.internal
        path: /plexbackups/backups/plex
        globalMounts:
          - path: /config/Backups
            readOnly: false
