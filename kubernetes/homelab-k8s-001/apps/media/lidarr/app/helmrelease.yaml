---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/lidarr
              tag: 2.4.3.4248@sha256:fcf7417a7dfa9967a78d668904c62888272bd6dd814b4b9c4500618f51be6b86

            env:
              TZ: ${TIMEZONE}
              LIDARR__INSTANCE_NAME: *app
              LIDARR__PORT: &port 8686
              LIDARR__LOG_LEVEL: info
              LIDARR__ANALYTICS_ENABLED: "False"
              LIDARR__APPLICATION_URL: "https://lidarr.${SECRET_DOMAIN}"
              LIDARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: LIDARR_API_KEY

            ports:
              - name: http
                containerPort: *port

            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          # sidecars:
          exporter:
            dependsOn: *app

            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1

            args:
              - *app
              - --enable-additional-metrics

            env:
              - name: URL
                value: "http://localhost:8686"
              - name: CONFIG
                value: "/config/config.xml"
              - name: PORT
                value: &metricsPort 9709

            ports:
              - name: metrics
                containerPort: *metricsPort

            securityContext: *securityContext

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups:
          - 1568

    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 192.168.30.232
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort

    route:
      *app :
        hostnames: ["{{ .Release.Name }}.dmfrey.com"]
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:headphones"

          # gethomepage.dev/enabled: "true"
          # gethomepage.dev/group: Downloads
          # gethomepage.dev/name: Lidarr
          # gethomepage.dev/icon: lidarr.png
          # gethomepage.dev/description: Music Downloads
          # gethomepage.dev/widget.type: lidarr
          # gethomepage.dev/widget.url: http://lidarr.media.svc.cluster.local:9709
          # gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_LIDARR_TOKEN}}` }}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}

      media:
        type: nfs
        server: ${QNAP_ADDR}
        path: /media/

      backups:
        enabled: true
        type: nfs
        server: "${QNAP_ADDR}"
        path: /plexbackups/backups/lidarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

      tmp:
        type: emptyDir
        medium: Memory
        advancedMounts:
          *app :
            app:
              - path: /tmp

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 10s
