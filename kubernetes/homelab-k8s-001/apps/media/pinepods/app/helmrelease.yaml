---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pinepods

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: -1

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: madeofpendletonwool/pinepods
              tag: 0.7.10@sha256:c6eff84d00636c9c21dae913fa4731e008a2542427183396e813512eecd4fdb3

            env:
              TZ: America/New_York
              # Basic Server Info
              SEARCH_API_URL: 'https://search.pinepods.online/api/search'
              PEOPLE_API_URL: 'https://people.pinepods.online'

              VALKEY_HOST: pinepods-kv-cluster.media.svc.cluster.local

              DB_TYPE: postgresql
              DB_HOST:
                valueFrom:
                  secretKeyRef:
                    name: pg-pinepods-app
                    key: host
              DB_PORT:
                valueFrom:
                  secretKeyRef:
                    name: pg-pinepods-app
                    key: port
              DB_NAME:
                valueFrom:
                  secretKeyRef:
                    name: pg-pinepods-app
                    key: dbname
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: pg-pinepods-app
                    key: username
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: pg-pinepods-app
                    key: password

            # envFrom:
            #   - secretRef:
            #       name: pinepods-secret

            ports:
              - name: http
                containerPort: &port 8040

            resources:
              # requests:
                # cpu: 10m
              limits:
                memory: 1Gi

            # securityContext:
              # allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: true
              # capabilities:
                # drop:
                  # - ALL

    # defaultPodOptions:
    #   securityContext:
    #     # runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch
    #     # seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port

    route:
      *app :
        hostnames: ["podcasts.dmfrey.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Podcasts
          gethomepage.dev/name: PinePods
          gethomepage.dev/icon: pinepods.png
          gethomepage.dev/description: Podcast Aggregator
          gethomepage.dev/widget.type: pinepods
          gethomepage.dev/widget.url: http://pinepods.media.svc.cluster.local:8080
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /opt/pinepods

      media:
        type: nfs
        server: nas.internal
        path: /media/podcasts/
        globalMounts:
          - path: /opt/pinepods/downloads

      cache:
        type: emptyDir
        globalMounts:
          - path: /pinepods/cache

      tmp:
        type: emptyDir
        medium: Memory
