---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app romm

spec:

  interval: 15m

  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: rommapp/romm
              tag: latest

            env:
              TZ: ${TIMEZONE}
              ENABLE_SCHEDULED_RESCAN: "true"
              SCHEDULED_RESCAN_CRON: "0 3 * * *"
              ENABLE_SCHEDULED_UPDATE_SWITCH_TITLEDB: "false"
              ENABLE_SCHEDULED_UPDATE_MAME_XML: "false"
              ENABLE_RESCAN_ON_FILESYSTEM_CHANGE: "true"
              RESCAN_ON_FILESYSTEM_CHANGE_DELAY: 5
              DB_HOST: romm-mariadb-internal.media.svc.cluster.local
              DB_NAME: romm_db
              DB_USER: romm_user
              DB_PASSWD:
                valueFrom:
                  secretKeyRef:
                    name: romm-mariadb-secret
                    key: ROMM_PASSWORD

            envFrom:
              - secretRef:
                  name: romm-secret

            ports:
              - name: http
                containerPort: &port 8080

            resources:
              requests:
                memory: 350Mi
                cpu: 100m
              limits:
                memory: 1024Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups:
          - 1568

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      external:
        className: external
        annotations:
          nginx.org/websocket-services: romm
          theme.home.arpa/enabled: "true"
          auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:television-classic"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: romm.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http

    persistence:
      romm-data:
        existingClaim: ${DATA_CLAIM}
        globalMounts:
          - path: /romm
            readOnly: false

      romm-assets:
        existingClaim: ${ASSETS_CLAIM}
        globalMounts:
          - path: /romm/assets
            readOnly: false

      romm-config:
        type: emptyDir
        globalMounts:
          - path: /romm/config

      configuration:
        type: configMap
        name: romm-config
        globalMounts:
          - path: /romm/config/config.yml
            subPath: config.yml
        defaultMode: 0664

      romm-resources:
        existingClaim: ${RESOURCES_CLAIM}
        globalMounts:
          - path: /romm/resources
            readOnly: false

      romm-redis-data:
        existingClaim: ${REDIS_DATA_CLAIM}
        globalMounts:
          - path: /redis-data
            readOnly: false

      games:
        enabled: true
        existingClaim: nfs-games
        globalMounts:
          - path: /romm/library

      tmp:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /tmp

    # serviceMonitor:
    #   metrics:
    #     serviceName: *app
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         path: /metrics
    #         interval: 10m
    #         scrapeTimeout: 10s

