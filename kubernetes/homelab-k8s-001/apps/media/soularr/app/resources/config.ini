[Lidarr]
api_key = ${LIDARR_API_KEY}   # get this from lidarr settings > general > security > API Key
host_url = http://lidarr.media.svc.cluster.local:8686        # A safe bet would be to use the url you use to connect manually
download_dir = /media/downloads/soulseek # this should be the path to slskd downloads in the lidarr container

[Slskd]
api_key = ${SLSKD_API_KEY}    # generate this key manually see documentation above
host_url = http://slskd.download.svc.cluster.local:50300         # A safe bet would be to use the url that you use to manually connect to slskd
url_base = /
download_dir = /media/downloads/soulseek            # slskd download directory from within the slskd container
delete_searches = False              # delete the search after each soularr search
stalled_timeout = 3600
                                     # Maximum time (in seconds) that the script will wait for downloads to complete.
                                     # This is used to prevent the script from running forever due to a stalled download.
                                     # Defaults to 1 hour.

[Release Settings]
use_most_common_tracknum = True      # Selects the release with the most common amount of tracks out of all the releases.
allow_multi_disc = True
accepted_countries = Europe,Japan,United Kingdom,United States,[Worldwide],Australia,Canada # See full list of countries below.
accepted_formats = CD,Digital Media,Vinyl      # See full list of formats below.

[Search Settings]
search_timeout = 5000
maximum_peer_queue = 50
minimum_peer_upload_speed = 0        # Min upload speed in bit/s
minimum_filename_match_ratio = 0.5   # Min match ratio accepted when comparing lidarr track names to soulseek filenames.
allowed_filetypes = flac 24/192,flac 16/44.1,flac,mp3 320,mp3 # Specify the file types you prefer from most to least. As well as their attributes such as bitrate / samplerate / bitdepth.
                                                              # For flacs you can choose the bitdepth/samplerate. And for mp3s the bitrate.
                                                              # If you do not care about the specific quality you can still just put "flac" or "mp3".
                                                              # Soularr will then just look at the filetype and ignore file attributes.
ignored_users = User1,User2,Fred,Bob
search_for_tracks = True            # Set to False if you only want to search for complete albums
album_prepend_artist = False        # Set to True if you want to add the artist's name to the beginning of the search for albums
track_prepend_artist = True
search_type = incrementing_page     # Valid search types: all || incrementing_page || first_page
                                    # "all" will search for every wanted record everytime soularr is run.
                                    # "incrementing_page" will start with the first page and increment to the next on each run.
                                    # "first_page" will repeatedly search the first page.
                                    # If using the search type "first_page" remove_wanted_on_failure should be enabled.
number_of_albums_to_grab = 10       # How mancy records to grab each run, must be a number between 1 - 2,147,483,647
remove_wanted_on_failure = False    # Unmonitors the album if Soularr can't find it and places it in "failure_list.txt".
                                    # Failed albums can be re monitored by filtering "Unmonitored" in the Lidarr wanted list.
title_blacklist = Word1,word2       # Comma separated list of words that can't be in the title of albums or tracks. Case insensitive.
search_source = missing             # Lidarr source to use for searching. Accepted values are "missing" or "cutoff_unmet".
                                    # Default value is "missing".

[Logging]
# These options are passed into the logger's basicConfig() method as-is.
# This means, if you're familiar with Python's logging module, you can configure
# the logger with options beyond what's listed here by default.
# For more information on available options  --  https://docs.python.org/3/library/logging.html#logging.basicConfig
level = INFO                       # Logging level valid values are INFO, WARN, DEBUG, ERROR, CRITICAL
format = [%(levelname)s|%(module)s|L%(lineno)d] %(asctime)s: %(message)s # Format of log message  --  https://docs.python.org/3/library/logging.html#logrecord-attributes
datefmt = %Y-%m-%dT%H:%M:%S%z      # Format of datetimes  --  https://docs.python.org/3/library/time.html#time.strftime