---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr

spec:

  interval: 15m

  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  dependsOn:
    - name: rook-ceph-cluster
      namespace: storage
    - name: volsync
      namespace: storage

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.4.5@sha256:b7c547ebfcff3e85a988685d21c2ff68e18028469ef5e1e0217f0e29491e20c3

            env:
              TZ: ${TIMEZONE}
              BAZARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: BAZARR_API_KEY

            envFrom:
              - secretRef:
                  name: pmm-secret

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.3.0@sha256:5813a7da0ccd58f6dfb9d5e48480e2877355e6bb3d7d81c8908eb1adc3a23b6e

            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /add-ons

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

            securityContext: *securityContext

          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1

            args:
              - *app
              - --enable-additional-metrics

            env:
              URL: "http://localhost:6767"
              PORT: &metricsPort 9710
              APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: starr-apps-secret
                    key: BAZARR_API_KEY

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

            securityContext: *securityContext

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups:
          - 1568

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort

    ingress:
      internal:
        className: internal
        annotations:
          theme.home.arpa/enabled: "true"
          # auth.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "solar:subtitles-outline"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: bazarr.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http

    persistence:
      add-ons:
        type: emptyDir

      cache:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /config/cache

      config:
        existingClaim: ${VOLSYNC_CLAIM}

      log:
        type: emptyDir
        globalMounts:
          - path: /config/log

      media:
        existingClaim: nfs-media

      scripts:
        type: configMap
        name: bazarr-scripts
        defaultMode: 0775
        globalMounts:
          - readOnly: true

      tmp:
        type: emptyDir

      backups:
        type: nfs
        server: "${QNAP_ADDR}"
        path: /plexbackups/backups/bazarr
        globalMounts:
          - path: /config/backup
            readOnly: false

    serviceMonitor:
      metrics:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 10s
