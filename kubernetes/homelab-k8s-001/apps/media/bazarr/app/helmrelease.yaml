---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: bazarr

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: -1

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/bazarr
              tag: 1.5.3

            env:
              TZ: America/New_York
              BAZARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              BAZARR__LOG_LEVEL: info
              POSTGRESS_ENABLED: true
              POSTGRES_HOST:
                valueFrom:
                  secretKeyRef:
                    name: pg-bazarr-app
                    key: host
              POSTGRES_PORT:
                valueFrom:
                  secretKeyRef:
                    name: pg-bazarr-app
                    key: port
              POSTGRES_DATABASE:
                valueFrom:
                  secretKeyRef:
                    name: pg-bazarr-app
                    key: dbname
              POSTGRES_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: pg-bazarr-app
                    key: username
              POSTGRES_PASSWD:
                valueFrom:
                  secretKeyRef:
                    name: pg-bazarr-app
                    key: password

            envFrom:
              - secretRef:
                  name: bazarr-secret

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.5.0@sha256:0e64aedb0d0ae0a3bab880349a5109b2a31891d646dd61e433ca36ed220dff1f

            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /add-ons

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

            securityContext: *securityContext

          # exporter:
          #   image:
          #     repository: ghcr.io/onedr0p/exportarr
          #     tag: v2.1.0

          #   args:
          #     - *app
          #     - --enable-additional-metrics

          #   env:
          #     URL: "http://localhost:6767"
          #     PORT: &metricsPort 9710
          #     APIKEY:
          #       valueFrom:
          #         secretKeyRef:
          #           name: bazarr-secret
          #           key: BAZARR_API_KEY

          #   resources:
          #     requests:
          #       cpu: 10m
          #     limits:
          #       memory: 128Mi

          #   securityContext: *securityContext

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          # metrics:
          #   port: *metricsPort

    route:
      *app :
        annotations:
          # gatus.home-operations.com/endpoint: |-
          #   conditions: ["[STATUS] == 200"]
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Bazarr
          gethomepage.dev/icon: bazarr.png
          gethomepage.dev/description: Subtitle Downloads
          gethomepage.dev/widget.type: bazarr
          gethomepage.dev/widget.url: http://bazarr.media.svc.cluster.local:6767
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_BAZARR_TOKEN}}` }}"
        hostnames:
          - "{{ .Release.Name }}.dmfrey.com"
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https

    persistence:
      add-ons:
        type: emptyDir

      cache:
        type: emptyDir
        medium: Memory
        globalMounts:
          - path: /config/cache

      config:
        existingClaim: ${VOLSYNC_CLAIM}

      log:
        type: emptyDir
        globalMounts:
          - path: /config/log

      media:
        type: nfs
        server: nas.internal
        path: /media

      scripts:
        type: configMap
        name: bazarr-scripts
        defaultMode: 0775
        globalMounts:
          - readOnly: true

      tmp:
        type: emptyDir

      backups:
        type: nfs
        server: nas.internal
        path: /plexbackups/backups/bazarr
        globalMounts:
          - path: /config/backup
            readOnly: false

    # serviceMonitor:
    #   metrics:
    #     serviceName: *app
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         path: /metrics
    #         interval: 10m
    #         scrapeTimeout: 10s
