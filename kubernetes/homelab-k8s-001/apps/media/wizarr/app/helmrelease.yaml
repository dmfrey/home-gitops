---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: wizarr
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 4.3.0
  url: oci://ghcr.io/bjw-s-labs/helm/app-template
---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app wizarr

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: wizarr

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: -1

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/wizarrrr/wizarr
              tag: v2025.9.5

            env:
              TZ: America/New_York

            resources:
              requests:
                memory: 180Mi
                cpu: 15m
              limits:
                memory: 350Mi

    defaultPodOptions:
      securityContext:
        # runAsUser: 568
        # runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: &port 5690

    route:
      *app :
        hostnames: ["join.dmfrey.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Video
          gethomepage.dev/name: Wizarr
          gethomepage.dev/icon: wizarr.png
          gethomepage.dev/description: Plex Invite Management
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /data/database
