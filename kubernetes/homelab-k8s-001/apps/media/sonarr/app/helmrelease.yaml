---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.14.2938

            env:
              TZ: America/New_York
              SONARR__INSTANCE_NAME: *app
              SONARR__PORT: &port 8989
              SONARR__APPLICATION_URL: https://sonarr.dmfrey.com
              SONARR__LOG_LEVEL: info
              SONARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: sonarr-secret
                    key: SONARR_API_KEY

            ports:
              - name: http
                containerPort: *port

            resources:
              requests:
                memory: 350Mi
                cpu: 100m
              limits:
                memory: 1024Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          # exporter:
          #   image:
          #     repository: ghcr.io/onedr0p/exportarr
          #     tag: v2.1.0

          #   args:
          #     - *app
          #     - --enable-additional-metrics

          #   env:
          #     URL: "http://localhost:8989"
          #     PORT: &metricsPort 9707
          #     APIKEY:
          #       valueFrom:
          #         secretKeyRef:
          #           name: sonarr-secret
          #           key: SONARR_API_KEY

          #   resources:
          #     requests:
          #       cpu: 10m
          #     limits:
          #       memory: 128Mi

          #   securityContext:
          #     allowPrivilegeEscalation: false
          #     readOnlyRootFilesystem: true
          #     capabilities:
          #       drop:
          #         - ALL

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      *app :
        controller: *app
        # type: LoadBalancer
        # annotations:
        #   external-dns.alpha.kubernetes.io/hostname: &host sonarr.dmfrey.com
        #   lbipam.cilium.io/ips: 192.168.31.230, ::ffff:192.168.30.230
        ports:
          http:
            port: *port
            primary: true
          # metrics:
          #   port: *metricsPort

    route:
      *app :
        hostnames: ["{{ .Release.Name }}.dmfrey.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Sonarr
          gethomepage.dev/icon: sonarr.png
          gethomepage.dev/description: TV Downloads
          gethomepage.dev/widget.type: sonarr
          gethomepage.dev/widget.url: http://sonarr.media.svc.cluster.local:8989
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SONARR_TOKEN}}` }}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          *app :
            *app :
              - path: /config

      media:
        type: nfs
        server: nas.internal
        path: /media

      backups:
        type: nfs
        server: nas.internal
        path: /plexbackups/backups/sonarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

      tmp:
        type: emptyDir
        medium: Memory
        advancedMounts:
          *app :
            *app :
              - path: /tmp

    # serviceMonitor:
    #   metrics:
    #     serviceName: *app
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         path: /metrics
    #         interval: 10m
    #         scrapeTimeout: 10s

