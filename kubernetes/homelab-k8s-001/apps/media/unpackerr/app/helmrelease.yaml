---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: unpackerr
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 4.3.0
  url: oci://ghcr.io/bjw-s-labs/helm/app-template
---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app unpackerr

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: unpackerr

  maxHistory: 2

  install:
    remediation:
      retries: -1

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: docker.io/golift/unpackerr
              tag: unstable

            env:
              TZ: America/New_York
              UN_INTERVAL: "1m"
              UN_WEBSERVER_METRICS: "true"
              UN_SONARR_0_URL: http://sonarr.media.svc.cluster.local:8989
              UN_SONARR_0_PATHS_0: /media/downloads/series
              UN_SONARR_0_PATHS_1: /media/downloads/anime
              # UN_SONARR_0_API_KEY: # set in externalsecret
              UN_RADARR_0_URL: http://radarr.media.svc.cluster.local:7878
              UN_RADARR_0_PATHS_0: /media/downloads/movies
              # UN_RADARR_0_API_KEY: # set in externalsecret
              UN_LIDARR_0_URL: http://lidarr.media.svc.cluster.local:8686
              UN_LIDARR_0_PATHS_0: /media/downloads/music
              # UN_LIDARR_0_API_KEY: # set in externalsecret

            envFrom:
              - secretRef:
                  name: unpackerr-secret

            resources:
              requests:
                memory: 250Mi
                cpu: 10m
              limits:
                memory: 1024Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups:
          - 568
          - 1568

    service:
      *app :
        controller: *app
        ports:
          http:
            port: 5656

    persistence:
      media:
        type: nfs
        server: nas.internal
        path: /media
