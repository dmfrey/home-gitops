---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          setGateway: "true"

        # initContainers:
        #   fix-permissions:
        #     image:
        #       repository: busybox
        #       tag: stable

        #     command: ["sh", "-c", "chown -R 1000:1000 /config/*"]

        #     securityContext:
        #       runAsNonRoot: false
        #       readOnlyRootFilesystem: true
        #       allowPrivilegeEscalation: true
        #       runAsUser: 0
        #       runAsGroup: 0
        #       capabilities: { add: ["CHOWN", "FOWNER", "DAC_OVERRIDE"], drop: ["ALL"] }

        containers:

          *app :
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 1.35.1.5034

            env:
              TZ: America/New_York
              PROWLARR__INSTANCE_NAME: *app
              PROWLARR__PORT: &port 9696
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__APPLICATION_URL: "https://prowlarr.dmfrey.com"
              PROWLARR__LOG_LEVEL: info
              PROWLARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: PROWLARR_API_KEY

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

          # sidecars:
          # exporter:

          #   image:
          #     repository: ghcr.io/onedr0p/exportarr
          #     tag: v2.1.0

          #   args:
          #     - *app
          #     - --enable-additional-metrics

          #   env:
          #     URL: "http://localhost"
          #     CONFIG: "/config/config.xml"
          #     PORT: &metricsPort 9710

          #   resources:
          #     requests:
          #       cpu: 10m
          #     limits:
          #       memory: 128Mi

          #   securityContext:
          #     allowPrivilegeEscalation: false
          #     readOnlyRootFilesystem: true
          #     capabilities:
          #       drop:
          #         - ALL

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          # metrics:
          #   port: *metricsPort

    route:
      *app :
        hostnames: ["{{ .Release.Name }}.dmfrey.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Prowlarr
          gethomepage.dev/icon: prowlarr.png
          gethomepage.dev/description: Download Indexes
          gethomepage.dev/widget.type: prowlarr
          gethomepage.dev/widget.url: http://prowlarr.download.svc.cluster.local:9696
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PROWLARR_TOKEN}}` }}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}

      backups:
        type: nfs
        server: 192.168.30.5
        path: /plexbackups/backups/prowlarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

    # serviceMonitor:
    #   metrics:
    #     enabled: true
    #     serviceName: *app
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         path: /metrics
    #         interval: 1m
    #         scrapeTimeout: 10s
