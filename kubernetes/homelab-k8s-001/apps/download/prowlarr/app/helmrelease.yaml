---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  driftDetection:
    mode: enabled

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"

        containers:

          *app :
            image:
              repository: ghcr.io/onedr0p/prowlarr
              tag: 1.32.2.4987

            env:
              TZ: ${TIMEZONE}
              PROWLARR__INSTANCE_NAME: *app
              PROWLARR__PORT: &port 9696
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__APPLICATION_URL: "https://prowlarr.${SECRET_DOMAIN}"
              PROWLARR__LOG_LEVEL: info
              PROWLARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: PROWLARR_API_KEY

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                memory: 350Mi
                cpu: 5m
              limits:
                memory: 431Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

          # sidecars:
          exporter:

            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.1.0

            args:
              - *app
              - --enable-additional-metrics

            env:
              URL: "http://localhost"
              CONFIG: "/config/config.xml"
              PORT: &metricsPort 9710

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 65539
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort

    route:
      *app :
        hostnames: ["{{ .Release.Name }}.dmfrey.com"]
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:movie-search"

          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Download
          gethomepage.dev/name: Prowlarr
          gethomepage.dev/icon: prowlarr.png
          gethomepage.dev/description: Download Indexes
          # gethomepage.dev/widget.type: jellyfin
          # gethomepage.dev/widget.url: http://jellyfin.media.svc.cluster.local:8096
          # gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PROWLARR_TOKEN}}` }}"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}

      backups:
        type: nfs
        server: "${QNAP_ADDR}"
        path: /plexbackups/backups/prowlarr
        globalMounts:
          - path: /config/Backups
            readOnly: false

    serviceMonitor:
      metrics:
        enabled: true
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
