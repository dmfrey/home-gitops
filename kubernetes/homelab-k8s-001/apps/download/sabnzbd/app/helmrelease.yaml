---
# yaml-language-server: $schema=https://kubernetes-schemas-5e0.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sabnzbd

spec:

  interval: 15m

  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:
      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: sabnzbd-config
          secret.reloader.stakater.com/reload: sabnzbd-secret

        pod:
          enableServiceLinks: false

        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/sabnzbd
              tag: 4.4.1
              pullPolicy: IfNotPresent

            env:
              TZ: ${TIMEZONE}
              SABNZBD__PORT: &port 8080
              SABNZBD__HOST_WHITELIST_ENTRIES: >-
                {{ .Release.Name }},
                {{ .Release.Name }}.download,
                {{ .Release.Name }}.download.svc,
                {{ .Release.Name }}.download.svc.cluster,
                {{ .Release.Name }}.${SECRET_DOMAIN}
              SABNZBD__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: sabnzbd-secret
                    key: SABNZBD_API_KEY

              SABNZBD__NZB_KEY:
                valueFrom:
                  secretKeyRef:
                    name: sabnzbd-secret
                    key: SABNZBD_NZB_KEY

            envFrom:
              - secretRef:
                  name: sabnzbd-secret

            ports:
              - name: http
                containerPort: *port

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api?mode=version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                cpu: 10m
                memory: 479Mi
              limits:
                memory: 8000Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

          exporter:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v2.0.1

            args:
              - *app

            env:
              URL: "http://localhost:8080"
              PORT: &metricsPort 9712
              APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: sabnzbd-secret
                    key: SABNZBD_API_KEY

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port
            primary: true
          metrics:
            port: *metricsPort

    ingress:
      internal:
        enabled: true
        className: internal
        annotations:
          theme.home.arpa/enabled: "true"
          theme.home.arpa/theme: "nord"

          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:download-circle-outline"

          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: SABnzbd
          gethomepage.dev/icon: sabnzbd.png
          gethomepage.dev/description: NZB Download Client
          gethomepage.dev/widget.type: sabnzbd
          gethomepage.dev/widget.url: http://sabnzbd.download.svc.cluster.local:8080
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_SABNZBD_TOKEN}}` }}"

          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: sabnzbd.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: http

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          *app :
            *app :
              - path: /config

      sabnzbd-config:
        enabled: true
        type: configMap
        name: sabnzbd-config
        advancedMounts:
          sabnzbd:
            *app :
              - path: /tmp/sabnzbd.ini
                readOnly: false
                subPath: sabnzbd.ini

      downloads:
        enabled: true
        existingClaim: nfs-downloads
        globalMounts:
          - path: /data/downloads
            readOnly: false

      tmp:
        type: emptyDir
        medium: Memory
        advancedMounts:
          *app :
            *app :
              - path: /tmp

    serviceMonitor:
      metrics:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 10m
            scrapeTimeout: 10s
