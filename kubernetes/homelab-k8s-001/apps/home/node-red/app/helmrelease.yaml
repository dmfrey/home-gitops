---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: node-red
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 4.3.0
  url: oci://ghcr.io/bjw-s-labs/helm/app-template
---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app node-red
spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: node-red

  maxHistory: 2

  install:
    remediation:
      retries: -1

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:
      *app :
        type: statefulset

        containers:
          *app :
            image:
              repository: nodered/node-red
              tag: 4.1.0-18-minimal

            env:
              TZ: America/New_York
              FLOWS: "flows.json"
              NODE_RED_ENABLE_PROJECTS: "true"
              NODE_RED_ENABLE_SAFE_MODE: "false"

            resources:
              requests:
                memory: 350Mi
                cpu: 150m
              limits:
                memory: 1Gi

    defaultPodOptions:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"

    service:
      *app :
        controller: *app
        ports:
          http:
            port: &port 1880

    route:
      *app :
        hostnames: ["{{ .Release.Name }}.dmfrey.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Node-RED
          gethomepage.dev/icon: node-red.png
          gethomepage.dev/description: Low-code programming for event-driven applications
        parentRefs:
          - name: envoy-internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        existingClaim: "${VOLSYNC_CLAIM}"

      tmp:
        type: emptyDir
        medium: Memory
