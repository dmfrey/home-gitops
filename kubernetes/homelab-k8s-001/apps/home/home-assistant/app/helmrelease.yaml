---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant

spec:

  chartRef:
    kind: OCIRepository
    name: home-assistant

  interval: 1h

  values:

    controllers:

      home-assistant:
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: pg-home-assistant-app

        containers:
          app:
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.10.3@sha256:94c9906ffd11a2958ca07235686ab30927a7b0a684856f9a8c2f7d2b1a6e2e21

            env:
              TZ: America/New_York
              HASS_RECORDER_DB_URL:
                valueFrom:
                  secretKeyRef:
                    name: pg-home-assistant-app
                    key: uri

            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

          # codeserver:
          #   # dependsOn: home-assistant

          #   image:
          #     repository: ghcr.io/coder/code-server
          #     tag: 4.105.1

          #   args:
          #     - "/config"
          #     - --auth
          #     - "none"
          #     - --user-data-dir
          #     - "/config/.vscode"
          #     - --extensions-dir
          #     - "/config/.vscode"

          #   env:
          #     TZ: America/New_York

          #   ports:
          #     - name: code
          #       containerPort: &codePort 8080

    defaultPodOptions:
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [{
            "name":"iot-vlan",
            "namespace": "network",
            "ips": ["192.168.50.4/24"],
            "mac": "c6:2a:0a:f1:3d:f8"
          }]
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        # type: LoadBalancer
        # annotations:
          # external-dns.alpha.kubernetes.io/hostname: home.dmfrey.com
          # lbipam.cilium.io/ips: 192.168.29.242
        ports:
          http:
            appProtocol: kubernetes.io/ws
            port: &port 8123
          # code:
          #   port: *codePort

    route:
      app:
        annotations:
          gatus.home-operations.com/endpoint: |-
            conditions: ["[STATUS] == 200"]
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Home Assistant
          gethomepage.dev/icon: home-assistant.png
          gethomepage.dev/description: Home Automation Software
          gethomepage.dev/widget.type: homeassistant
          gethomepage.dev/widget.url: https://home.dmfrey.com
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_HASS_TOKEN}}` }}"
        hostnames:
          - home.dmfrey.com
        parentRefs:
          - name: envoy-external
            namespace: network
        rules:
          - backendRefs:
              - identifier: app
                port: *port
      # code:
      #   hostnames:
      #     - hass-code.dmfrey.com
      #   annotations:
      #     gethomepage.dev/enabled: "true"
      #     gethomepage.dev/group: Home
      #     gethomepage.dev/name: Home Assistant Code Server
      #     gethomepage.dev/icon: vscode.png
      #     gethomepage.dev/description: Online Code Editor
      #   parentRefs:
      #     - name: envoy-internal
      #       namespace: network
      #   rules:
      #     - backendRefs:
      #         - identifier: app
      #           port: *codePort

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config

      llmvision:
        existingClaim: home-assistant-llmvision
        advancedMounts:
          home-assistant:
            app:
              - path: /config/www/llmvision

      configuration:
        type: configMap
        name: hass-config
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml

      config-cache:
        existingClaim: "{{ .Release.Name }}-cache"
        globalMounts:
          - path: /config/.venv

      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs

      config-tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts

      media:
        type: nfs
        server: nas.internal
        path: /media

      tmp:
        type: emptyDir

      backups:
        enabled: true
        type: nfs
        server: nas.internal
        path: /homeassistant
        advancedMounts:
          home-assistant:
            app:
              - path: /config/backups
                readOnly: false

    # serviceMonitor:
    #   *app :
    #     serviceName: *app
    #     endpoints:
    #       - port: http
    #         scheme: http
    #         path: /api/prometheus
    #         interval: 30s
    #         scrapeTimeout: 10s
    #         bearerTokenSecret:
    #           name: home-assistant-secret
    #           key: PROMETHEUS_TOKEN

