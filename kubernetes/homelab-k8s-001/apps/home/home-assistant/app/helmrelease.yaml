---
# yaml-language-server: $schema=https://kubernetes-schemas-5e0.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant

spec:

  interval: 10m

  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: pg-home-assistant-app

        initContainers:
          # fix-permissions:
          #   dependsOn: git-sync
            # image:
            #   repository: busybox
            #   tag: stable

            # command: ["sh", "-c", "rm -rf /config/.ssh"]

            # securityContext:
            #   runAsNonRoot: false
            #   readOnlyRootFilesystem: true
            #   allowPrivilegeEscalation: true
            #   runAsUser: 0
            #   runAsGroup: 0
            #   capabilities: { add: ["CHOWN", "FOWNER", "DAC_OVERRIDE"], drop: ["ALL"] }

          git-clone:
            image:
              repository: alpine/git
              tag: v2.47.1

            command:
              # - sleep
              # - "3600"

              - "/bin/sh"
              - -c
              - |
                # whoami
                # echo $HOME
                #   # ls /.ssh
                #   # cat /.gitconfig
                #   # git config --global --add safe.directory /config
                #   # git config -l
                #   ssh-add ~/.ssh/id_ed25519
                cd /config
                #   cat .git/config
                #   rm -rf .worktrees
                #   rm -rf hass-config.git
                #   ls -la
                git fetch origin
                git reset origin/main

              # - git
              # - clone
              # - git@github.com:dmfrey/hass-config.git
              # - /config

            securityContext:
              readOnlyRootFilesystem: false
              allowPrivilegeEscalation: true
              capabilities: { drop: ["ALL"] }

          # git-sync:
          #   # dependsOn: fix-permissions
          #   restartPolicy: Always

          #   image:
          #     repository: registry.k8s.io/git-sync/git-sync
          #     tag: v4.2.4@sha256:8bfbf28623690fba06c65ec392e42023d28ecfc7e0fbfd4443388d020dc112ea

          #   env:
          #     GITSYNC_REPO: git@github.com:dmfrey/hass-config.git   # https://github.com/dmfrey/hass-config
          #     GITSYNC_REF: main
          #     GITSYNC_PERIOD: 10s # 1 day
          #     GITSYNC_ROOT: /config
          #     GITSYNC_ADD_USER: "true"
          #     GITSYNC_VERBOSE: 2
          #     # GIT_SYNC_ONE_TIME: "true"

          #   resources:
          #     requests:
          #       cpu: 10m
          #     limits:
          #       memory: 128Mi

          #   securityContext:
          #     readOnlyRootFilesystem: false
          #     allowPrivilegeEscalation: true
          #     capabilities: { drop: ["ALL"] }

        containers:
          *app :
            image:
              repository: ghcr.io/onedr0p/home-assistant
              tag: 2025.1.4@sha256:6389f9593b4acd80c74322f56c9229fae631e752a3bf49839be12442a153e0dc # 2025.1.2@sha256:7103698ead18144a39ae5412467fe1885331367aeb22a9c2046640f0c8f84cf7   # 2025.1.2@sha256:7103698ead18144a39ae5412467fe1885331367aeb22a9c2046640f0c8f84cf7

            env:
              TZ: ${TIMEZONE}
              HASS_RECORDER_DB_URL:
                valueFrom:
                  secretKeyRef:
                    name: pg-home-assistant-app
                    key: uri

            envFrom:
              - secretRef:
                  name: home-assistant-secret
                prefix: "HASS_"

            ports:
              - name: http
                containerPort: &port 8123

            probes:
              liveness:
                custom: true
                spec:
                  httpGet:
                    path: /manifest.json
                    port: *port
                  initialDelaySeconds: 3
                  periodSeconds: 3
              readiness:
                enabled: false
              startup:
                enabled: false

            resources:
              requests:
                # squat.ai/slzb06m: 1
                # squat.ai/skyconnect: 1
                cpu: 47m
                memory: 2048Mi
              limits:
                # squat.ai/slzb06m: 1
                # squat.ai/skyconnect: 1
                memory: 4096Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

          codeserver:
            dependsOn: *app

            image:
              repository: ghcr.io/coder/code-server
              tag: 4.96.4

            args:
              - "/config"
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"
              - --port
              - "8082"

            env:
              TZ: ${TIMEZONE}

            ports:
              - name: code
                containerPort: &codePort 8082

        # pod:
        #   annotations:
        #     k8s.v1.cni.cncf.io/networks: |
        #       [{
        #         "name":"iot-vlan",
        #         "namespace": "network",
        #         "ips": ["192.168.50.4/24"],
        #         "mac": "7b:ac:9c:14:8d:48"
        #       }]

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
        supplementalGroups:
          - 20    # dialout
          - 85    # usb

    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          # external-dns.alpha.kubernetes.io/hostname: home.${SECRET_DOMAIN}
          lbipam.cilium.io/ips: ${SVC_HASS_ADDR}
        ports:
          http:
            port: *port
          code:
            port: *codePort
          # otbrweb:
          #   port: *otbrWebPort
          # otbrrest:
          #   port: *otbrRestPort

    ingress:
      external:
        className: external
        annotations:
          nginx.org/websocket-services: *app
          hajimari.io/enable: "true"
          hajimari.io/icon: "simple-icons:homeassistant"
          hajimari.io/appName: "Home Assistant"
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - host: home.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: *app
                  port: http

      code:
        className: internal
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:vs-code"
          hajimari.io/appName: "Hass Config"
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        hosts:
          - host: hass-code.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: *app
                  port: code

    serviceMonitor:
      *app :
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /api/prometheus
            interval: 30s
            scrapeTimeout: 10s
            bearerTokenSecret:
              name: home-assistant-secret
              key: PROMETHEUS_TOKEN

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        globalMounts:
          - path: /config

      llmvision:
        existingClaim: ${LLMVISION_CLAIM}
        globalMounts:
          - path: /llmvision

      deploy-key:
        type: secret
        name: home-assistant-deploy-key
        defaultMode: 256
        advancedMounts:
          *app :
            git-clone:
              - path: /.ssh/id_ed25519
                subPath: ssh-privatekey
                readOnly: true
              - path: /.ssh/known_hosts
                subPath: known-hosts
              - path: /.gitconfig
                subPath: dot-gitconfig
              - path: /.ssh/config
                subPath: ssh-config
            # git-sync:
            #   - path: /etc/git-secret/ssh
            #     subPath: ssh-privatekey
            #     readOnly: true
            #   - path: /etc/git-secret/known_hosts
            #     subPath: known-hosts
            *app :
              - path: /config/.ssh/id_ed25519
                subPath: ssh-privatekey
                readOnly: true
              - path: /config/.ssh/known_hosts
                subPath: known-hosts
              # - path: /config/.gitconfig
              #   subPath: dot-gitconfig
              - path: /config/.ssh/config
                subPath: ssh-config
            codeserver:
              - path: /home/coder/.ssh/id_ed25519
                subPath: ssh-privatekey
                readOnly: true
              - path: /home/coder/.ssh/known_hosts
                subPath: known-hosts
              - path: /home/coder/.gitconfig
                subPath: dot-gitconfig
              - path: /home/coder/.ssh/config
                subPath: ssh-config

      configuration:
        type: configMap
        name: hass-config
        advancedMounts:
          *app :
            *app :
              - path: /config/configuration.yaml
                subPath: configuration.yaml

      backups:
        enabled: true
        type: nfs
        server: "${QNAP_ADDR}"
        path: /homeassistant
        advancedMounts:
          *app :
            *app :
              - path: /config/backups
                readOnly: false

      tmp:
        type: emptyDir
        medium: Memory
        advancedMounts:
          *app :
            git-clone:
              - path: /tmp
            # git-sync:
            #   - path: /tmp
            *app :
              - path: /tmp
            codeserver:
              - path: /tmp

      # usb:
      #   type: hostPath
      #   hostPath: /dev/ttyUSB0
      #   advancedMounts:
      #     *app :
      #       *app :
      #         - path: /dev/ttyUSB0


