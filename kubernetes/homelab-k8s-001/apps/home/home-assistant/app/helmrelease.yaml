---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app home-assistant

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: app-template

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: -1

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    controllers:

      *app :
        type: statefulset

        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: pg-home-assistant-app

        # initContainers:
          # fix-permissions:
          #   image:
          #     repository: busybox
          #     tag: stable

          #   command: ["sh", "-c", "chown -R 1000:1000 /config/.*"]

          #   securityContext:
          #     runAsNonRoot: false
          #     readOnlyRootFilesystem: true
          #     allowPrivilegeEscalation: true
          #     runAsUser: 0
          #     runAsGroup: 0
          #     capabilities: { add: ["CHOWN", "FOWNER", "DAC_OVERRIDE"], drop: ["ALL"] }

          # git-clone:
          #   image:
          #     repository: alpine/git
          #     tag: v2.47.2

          #   command:
          #     # - sleep
          #     # - "3600"

          #     - "/bin/sh"
          #     - -c
          #     - |
          #       # whoami
          #       # echo $HOME
          #       #   # ls /.ssh
          #       #   # cat /.gitconfig
          #       #   # git config --global --add safe.directory /config
          #       #   # git config -l
          #       #   ssh-add ~/.ssh/id_ed25519
          #       cd /config
          #       #   cat .git/config
          #       #   rm -rf .worktrees
          #       #   rm -rf hass-config.git
          #       #   ls -la
          #       git fetch origin
          #       git reset origin/main

          #     # - git
          #     # - clone
          #     # - git@github.com:dmfrey/hass-config.git
          #     # - /config

          #   securityContext:
          #     readOnlyRootFilesystem: false
          #     allowPrivilegeEscalation: true
          #     capabilities: { drop: ["ALL"] }

        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.7.1

            env:
              TZ: America/New_York
              HASS_RECORDER_DB_URL:
                valueFrom:
                  secretKeyRef:
                    name: pg-home-assistant-app
                    key: uri

            envFrom:
              - secretRef:
                  name: home-assistant-secret
                # prefix: "HASS_"

            ports:
              - name: http
                containerPort: &port 8123

            probes:
              liveness:
                custom: true
                spec:
                  httpGet:
                    path: /manifest.json
                    port: *port
                  initialDelaySeconds: 3
                  periodSeconds: 3
              readiness:
                enabled: false
              startup:
                enabled: false

            resources:
              requests:
                cpu: 47m
                memory: 2048Mi
              limits:
                memory: 4096Mi

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

          # matter-server:
          #   image:
          #     repository: ghcr.io/home-assistant-libs/python-matter-server
          #     tag: "7.0.1"

          #   args:
          #     - --storage-path=/data
          #     - --paa-root-cert-dir=/data/paa-root-cert
          #     - --primary-interface=net1
          #     - --log-level=debug

          #   env:
          #     MATTER_SERVER__INSTANCE_NAME: matter-server
          #     MATTER_SERVER__PORT: &matterPort 5580
          #     # MATTER_SERVER__APPLICATION_URL: matter.dmfrey.com

          #   resources:
          #     requests:
          #       cpu: 10m
          #     limits:
          #       memory: 256Mi

          #   securityContext:
          #     runAsNonRoot: false
          #     readOnlyRootFilesystem: false
          #     allowPrivilegeEscalation: true
          #     runAsUser: 0
          #     runAsGroup: 0
          #     capabilities: { add: ["CHOWN", "FOWNER", "DAC_OVERRIDE"], drop: ["ALL"] }

          codeserver:
            dependsOn: *app

            image:
              repository: ghcr.io/coder/code-server
              tag: 4.101.2

            args:
              - "/config"
              - --auth
              - "none"
              - --user-data-dir
              - "/config/.vscode"
              - --extensions-dir
              - "/config/.vscode"

            env:
              TZ: America/New_York

            ports:
              - name: code
                containerPort: &codePort 8080

        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name":"iot-vlan",
                "namespace": "network",
                "ips": ["192.168.50.4/24"],
                "mac": "c6:2a:0a:f1:3d:f8"
              }]

          # hostNetwork: true

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 20    # dialout
          - 85    # usb
          - 568

    service:
      *app :
        controller: *app
        type: LoadBalancer
        annotations:
          # external-dns.alpha.kubernetes.io/hostname: home.dmfrey.com
          lbipam.cilium.io/ips: 192.168.30.242, ::ffff:192.168.30.242
        ports:
          http:
            port: *port
          matter:
            port: 5540
          code:
            port: *codePort

    route:
      *app :
        hostnames: ["home.dmfrey.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Home Assistant
          gethomepage.dev/icon: home-assistant.png
          gethomepage.dev/description: Home Automation Software
          gethomepage.dev/widget.type: homeassistant
          gethomepage.dev/widget.url: https://home.dmfrey.com
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_HASS_TOKEN}}` }}"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
      code:
        hostnames: ["hass-code.dmfrey.com"]
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Home
          gethomepage.dev/name: Home Assistant Code Server
          gethomepage.dev/icon: vscode.png
          gethomepage.dev/description: Online Code Editor
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *codePort

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          *app :
            # fix-permissions:
            #   - path: /config
            # git-clone:
            #   - path: /config
            *app :
              - path: /config
            codeserver:
              - path: /config

      llmvision:
        existingClaim: home-assistant-llmvision
        advancedMounts:
          *app :
            *app :
              - path: /config/www/llmvision

      matter-server-data:
        existingClaim: home-assistant-matter-server-data
        advancedMounts:
          *app :
            matter-server:
              - path: /data

      # deploy-key:
      #   type: secret
      #   name: home-assistant-deploy-key
      #   defaultMode: 256
      #   advancedMounts:
      #     *app :
            # git-clone:
            #   - path: /.ssh/id_ed25519
            #     subPath: ssh-privatekey
            #     readOnly: true
            #   - path: /.ssh/known_hosts
            #     subPath: known-hosts
            #   - path: /.gitconfig
            #     subPath: dot-gitconfig
            #   - path: /.ssh/config
            #     subPath: ssh-config
            # *app :
            #   - path: /config/.ssh/id_ed25519
            #     subPath: ssh-privatekey
            #     readOnly: true
            #   - path: /config/.ssh/known_hosts
            #     subPath: known-hosts
            #   - path: /config/.ssh/config
            #     subPath: ssh-config
            # codeserver:
            #   - path: /home/coder/.ssh/id_ed25519
            #     subPath: ssh-privatekey
            #     readOnly: true
            #   - path: /home/coder/.ssh/known_hosts
            #     subPath: known-hosts
            #   - path: /home/coder/.gitconfig
            #     subPath: dot-gitconfig
            #   - path: /home/coder/.ssh/config
            #     subPath: ssh-config

      configuration:
        type: configMap
        name: hass-config
        advancedMounts:
          *app :
            *app :
              - path: /config/configuration.yaml
                subPath: configuration.yaml

      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs

      config-tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts

      media:
        type: nfs
        server: nas.internal
        path: /media

      tmp:
        type: emptyDir
        medium: Memory
        advancedMounts:
          *app :
            # git-clone:
            #   - path: /tmp
            *app :
              - path: /tmp
            matter-server:
              - path: /tmp
            codeserver:
              - path: /tmp

      backups:
        enabled: true
        type: nfs
        server: nas.internal
        path: /homeassistant
        advancedMounts:
          *app :
            *app :
              - path: /config/backups
                readOnly: false

    # serviceMonitor:
    #   *app :
    #     serviceName: *app
    #     endpoints:
    #       - port: http
    #         scheme: http
    #         path: /api/prometheus
    #         interval: 30s
    #         scrapeTimeout: 10s
    #         bearerTokenSecret:
    #           name: home-assistant-secret
    #           key: PROMETHEUS_TOKEN

