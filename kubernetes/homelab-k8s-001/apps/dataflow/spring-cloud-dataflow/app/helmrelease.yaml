---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app spring-cloud-dataflow
  namespace: dataflow
spec:

  interval: 5m

  chart:
    spec:
      chart: spring-cloud-dataflow
      version: 35.0.0
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system

  maxHistory: 2

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  valuesFrom:
    - targetPath: externalRabbitmq.host
      kind: Secret
      name: rabbit-dataflow-default-user
      valuesKey: host
    - targetPath: externalRabbitmq.port
      kind: Secret
      name: rabbit-dataflow-default-user
      valuesKey: port
    - targetPath: externalRabbitmq.username
      kind: Secret
      name: rabbit-dataflow-default-user
      valuesKey: username
    - targetPath: externalRabbitmq.password
      kind: Secret
      name: rabbit-dataflow-default-user
      valuesKey: password

  values:

    global:
      security:
        allowInsecureImages: true

    deployer:
      imagePullPolicy: Always
      imagePullSecrets:
        - github-deploy-key

      environmentVariables:
        - "DEBUG=true"
        - "LOGGING_LEVEL_IO_MICROMETER_PROMETHEUS=debug"
        - "LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC=debug"
        - "SPRING_BATCH_JDBC_INITIALIZE_SCHEMA=never"

      volumeMounts:
        - mountPath: /tmp
          name: tmp-volume

      volumes:
        - name: tmp-volume
          persistentVolumeClaim:
            claimName: deployer-shared-fs

    server:

      configuration:
        metricsDashboard: https://grafana.${SECRET_DOMAIN}:443

      extraEnvVars:
        - name: DEBUG
          value: "true"
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC
          value: debug

      extraVolumes: []

      extraVolumeMounts: []

      livenessProbe:
        initialDelaySeconds: 30

      resources:
        requests:
          cpu: "0.5"
          memory: 1024M
        limits:
          cpu: "1"
          memory: 2048M

      service:
        type: ClusterIP
        port: 8080

      ingress:
        enabled: true

        annotations:
          nginx.org/websocket-services: *app
          hajimari.io/enable: "true"
          hajimari.io/icon: "simple-icons:spring"
          hajimari.io/url: https://dataflow.${SECRET_DOMAIN}/dashboard
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        ingressClassName: internal
        hostname: dataflow.${SECRET_DOMAIN}
        tls: false

    skipper:

      extraEnvVars:
        - name: DEBUG
          value: "true"
        - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_JDBC
          value: debug

      extraVolumes: []

      extraVolumeMounts: []

      livenessProbe:
        initialDelaySeconds: 30

    metrics:
      enabled: true

      image:
        repository: micrometermetrics/prometheus-rsocket-proxy:2.0.0-RC1
        digest: sha256:6581ef52d1cf44a3b8526d8b18cbe1775ee67b273361221b2837d641bc296feb

      resources:
        requests:
          cpu: "0.5"
          memory: 1024Mi
        limits:
          cpu: "1.0"
          memory: 2048Mi

      replicaCount: 1

      serviceMonitor:
        enabled: true

      extraEnvVars:
        - name: DEBUG
          value: "false"
        - name: LOGGING_LEVEL_ORG_XERIAL_SNAPPY
          value: info

      extraVolumeMounts:
        - mountPath: /tmp
          name: empty-dir

    mariadb:
      enabled: false

    externalDatabase:
      driver: org.postgresql.Driver
      dataflow:
        url: jdbc:postgresql://pg-dataflow-rw.dataflow.svc.cluster.local:5432/dataflow
        username: dataflow
        existingSecret: pg-dataflow-app
        existingSecretPasswordKey: password
      skipper:
        url: jdbc:postgresql://pg-skipper-rw.dataflow.svc.cluster.local:5432/skipper
        username: skipper
        existingSecret: pg-skipper-app
        existingSecretPasswordKey: password

    rabbitmq:
      enabled: false

    externalRabbitmq:
      enabled: true
