---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: pg-authentik
  annotations:
    cnpg.io/skipEmptyWalArchiveCheck: "enabled"
    secret.reloader.stakater.com/reload: pg-authentik-cnpg-secret

spec:

  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.10

  backup:
    volumeSnapshot:
      className: csi-ceph-blockpool

  bootstrap:
    initdb:
      dataChecksums: true
      database: authentik
      owner: authentik
      encoding: "UTF8"
      localeCollate: en_US.utf8
      localeCType: en_US.utf8

  monitoring:
    enablePodMonitor: true

  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 256MB # amount of RAM to use for data caching, https://postgresqlco.nf/doc/en/param/shared_buffers/

  primaryUpdateStrategy: unsupervised # let k8s handle upgrades
  primaryUpdateMethod: restart # prefer downtime of image download from registry instead of switching primary instance (promote a standby instance to primary) when current primary pod is updated

  resources:
    requests:
      memory: 1024Mi
      cpu: 1
    limits:
      memory: 2048Mi
      cpu: 2

  storage:
    storageClass: ceph-block
    size: 10Gi

  walStorage:
    storageClass: ceph-block
    size: 20Gi

#    recovery:
#      source: &previous-cluster pg-authentik-v0
#  externalClusters:
#    - name: *previous-cluster
#      barmanObjectStore:
#        wal:
#          compression: bzip2
#          maxParallel: 8
#        destinationPath: s3://cnpg/
#        endpointURL: http://minio.internal:9000
#        s3Credentials:
#          accessKeyId:
#            name: pg-authentik-cnpg-secret
#            key: AWS_ACCESS_KEY_ID
#          secretAccessKey:
#            name: cpg-authentik-cnpg-secret
#            key: AWS_SECRET_ACCESS_KEY
