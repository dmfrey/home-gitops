---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik

spec:

  interval: 15m

  chart:
    spec:
      chart: authentik
      version: 2024.10.3
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system

  install:
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    global:
      storageClass: ceph-block

      image:
        repository: ghcr.io/goauthentik/server
        tag: 2024.10.3
        pullPolicy: IfNotPresent

      envFrom:
        - secretRef:
            name: authentik-secret

    authentik:

      security_key: ""

      avatars: "gravatar,initials"

      log_level: info

      email:
        host: "smtp-relay.network.svc.cluster.local"
        port: 2525
        use_tls: false
        from: "authentik@${SECRET_DOMAIN}"

      error_reporting:
        enabled: false
        send_pii: false

      postgresql:
        host: file:///postgres-creds/host
        port: 5432
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password

      redis:
        host: authentik-kv-cluster.security.svc.cluster.local

    geoip:
      enabled: true
      existingSecret:
        secretName: authentik-secret
        accountId: MAXMIND_ACCOUNT_ID
        licenseKey: MAXMIND_LICENSE_KEY
      editionIds: "GeoLite2-City"
      image:
        repository: ghcr.io/maxmind/geoipupdate
        tag: v7.1.0
      updateInterval: 8

    # blueprints:
    #   configMaps: []
    #   secrets: []

    prometheus:
      rules:
        enabled: true

    server:

      autoscaling:
        enabled: true
        minReplicas: 2

      deploymentAnnotations:
        secret.reloader.stakater.com/reload: pg-authentik-app

      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "material-symbols:security-rounded"

          gethomepage.dev/enabled: "true"
          gethomepage.dev/icon: authentik.png
          gethomepage.dev/name: Authentik
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/app: authentik
          gethomepage.dev/description: OIDC User Management
          gethomepage.dev/widget.type: authentik
          gethomepage.dev/widget.url: http://authentik-server.security.svc.cluster.local
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_AUTHENTIK_TOKEN}}"

          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
          nginx.org/websocket-services: authentik
          nginx.ingress.kubernetes.io/enable-global-auth: "false"

          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
        hosts:
          - auth.${SECRET_DOMAIN}
        pathType: "Prefix"
        paths:
          - "/"

      metrics:
        serviceMonitor:
          enabled: true

      volumes: &postgresCredsVolume
        - name: postgres-creds
          secret:
            secretName: pg-authentik-app
      volumeMounts: &postgresCredsVolumeMounts
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true

    worker:

      autoscaling:
        enabled: true
        minReplicas: 2

      volumes: *postgresCredsVolume
      volumeMounts: *postgresCredsVolumeMounts
