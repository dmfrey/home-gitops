---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: authentik
spec:
  interval: 1m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2025.2.4
  url: oci://ghcr.io/goauthentik/helm-charts/authentik
---
# yaml-language-server: $schema=https://kubernetes-schemas.dmfrey.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik

spec:

  interval: 1h

  chartRef:
    kind: OCIRepository
    name: authentik

  install:
    remediation:
      retries: -1

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:

    global:
      storageClass: ceph-block

      image:
        repository: ghcr.io/goauthentik/server
        tag: 2025.2.4
        pullPolicy: IfNotPresent

      envFrom:
        - secretRef:
            name: authentik-secret

    authentik:

      security_key: ""

      avatars: "gravatar,initials"

      log_level: info

      email:
        host: "smtp-relay.kube-system.svc.cluster.local"
        port: 2525
        use_tls: false
        from: "authentik@dmfrey.com"

      error_reporting:
        enabled: false
        send_pii: false

      postgresql:
        host: file:///postgres-creds/host
        port: 5432
        user: file:///postgres-creds/username
        password: file:///postgres-creds/password

      redis:
        host: authentik-kv-cluster.security.svc.cluster.local

    geoip:
      enabled: true

      existingSecret:
        secretName: authentik-secret
        accountId: MAXMIND_ACCOUNT_ID
        licenseKey: MAXMIND_LICENSE_KEY

      editionIds: "GeoLite2-City"

      image:
        repository: ghcr.io/maxmind/geoipupdate
        tag: v7.1.0

      updateInterval: 8

      resources:
        requests:
          cpu: 50m
        limits:
          memory: 512Mi

    # blueprints:
    #   configMaps: []
    #   secrets: []

    prometheus:
      rules:
        enabled: true

    server:

      autoscaling:
        enabled: true
        minReplicas: 2

      deploymentAnnotations:
        secret.reloader.stakater.com/reload: pg-authentik-app

      metrics:
        serviceMonitor:
          enabled: true

      resources:
        requests:
          cpu: 200m
        limits:
          memory: 1024Mi

      volumes: &postgresCredsVolume
        - name: postgres-creds
          secret:
            secretName: pg-authentik-app
      volumeMounts: &postgresCredsVolumeMounts
        - name: postgres-creds
          mountPath: /postgres-creds
          readOnly: true

    worker:

      autoscaling:
        enabled: true
        minReplicas: 2

      resources:
        requests:
          cpu: 100m
        limits:
          memory: 1024Mi

      volumes: *postgresCredsVolume
      volumeMounts: *postgresCredsVolumeMounts
